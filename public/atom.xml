<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>进击的前端</title>
  <subtitle>还没想到合适的</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-01T04:33:56.149Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Rico</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>解决Vue项目中audio元素在移动端无法自动播放的问题</title>
    <link href="http://yoursite.com/2018/03/30/%E8%A7%A3%E5%86%B3Vue%E9%A1%B9%E7%9B%AE%E4%B8%ADaudio%E5%85%83%E7%B4%A0%E5%9C%A8%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%97%A0%E6%B3%95%E8%87%AA%E5%8A%A8%E6%92%AD%E6%94%BE%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/03/30/解决Vue项目中audio元素在移动端无法自动播放的问题/</id>
    <published>2018-03-30T02:15:12.000Z</published>
    <updated>2018-04-01T04:33:56.149Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>用 Vue 开发一个 HTML5 活动页面，活动页面需要一个循环播放的背景音乐，一进入页面就自动播放。按照正常思维，直接插入 <code>audio</code> 元素，设置好属性就算完了。就像下面这样：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"path/to/music"</span> <span class="attr">loop</span> <span class="attr">autoplay</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></div></pre></td></tr></table></figure>
<p>这样多简单啊，在 PC 浏览器上也表现正常。拿到手机上测试一下，才发现根本不出声音。问题就来了，为啥在手机上不能自动播放呢。</p>
<a id="more"></a>
<h2 id="探索过程"><a href="#探索过程" class="headerlink" title="探索过程"></a>探索过程</h2><p>使用 google 大法了解到，移动设备为了节省流量，禁用了 <code>audio</code> 元素的自动播放的功能。必须要有用户交互才能播放音频，比如说 <code>touchstart</code> 事件。</p>
<p>了解到这个重要信息，马上也就可以找到相应的解决办法，那就是模拟 <code>touchstart</code> 事件啦，然后把这个事件的触发放到 Vue 的生命周期方法中，比如 <code>mounted</code>。</p>
<p>因此马上就做一个音频播放器的组件 <code>AudioPlayer.vue</code> 的组件，具体代码如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span></span></div><div class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"player-cd"</span></span></div><div class="line"><span class="tag">      <span class="attr">id</span>=<span class="string">"trigger"</span></span></div><div class="line"><span class="tag">    &gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">audio</span></span></div><div class="line"><span class="tag">        <span class="attr">:src</span>=<span class="string">"src"</span></span></div><div class="line"><span class="tag">        <span class="attr">id</span>=<span class="string">"audio"</span></span></div><div class="line"><span class="tag">        <span class="attr">loop</span></span></div><div class="line"><span class="tag">      &gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></div><div class="line"><span class="undefined">  data () &#123;</span></div><div class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></div><div class="line"><span class="javascript">      src: <span class="string">'http://o9o8lcfa3.bkt.clouddn.com/%E5%88%9A%E5%A5%BD%E9%81%87%E8%A7%81%E4%BD%A0.m4a'</span></span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">  &#125;,</span></div><div class="line"><span class="undefined">  mounted () &#123;</span></div><div class="line"><span class="javascript">    <span class="keyword">let</span> trigger = <span class="built_in">document</span>.getElementById(<span class="string">'trigger'</span>)</span></div><div class="line"><span class="javascript">    <span class="keyword">let</span> audio = <span class="built_in">document</span>.getElementById(<span class="string">'audio'</span>)</span></div><div class="line"><span class="javascript">    trigger.addEventListener(<span class="string">'touchstart'</span>, () =&gt; &#123;</span></div><div class="line"><span class="undefined">      audio.play()</span></div><div class="line"><span class="undefined">    &#125;)</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="comment">// 模拟触发 「touchstart」 事件</span></span></div><div class="line"><span class="javascript">    <span class="keyword">this</span>.createTouchstartEventAndDispatch(trigger)</span></div><div class="line"><span class="undefined">  &#125;,</span></div><div class="line"><span class="undefined">  methods: &#123;</span></div><div class="line"><span class="undefined">    createTouchstartEventAndDispatch (el) &#123;</span></div><div class="line"><span class="javascript">      <span class="keyword">let</span> event = <span class="built_in">document</span>.createEvent(<span class="string">'Events'</span>)</span></div><div class="line"><span class="javascript">      event.initEvent(<span class="string">'touchstart'</span>, <span class="literal">true</span>, <span class="literal">true</span>)</span></div><div class="line"><span class="undefined">      el.dispatchEvent(event)</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">  &#125;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"less"</span> <span class="attr">scoped</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">// var</span></div><div class="line"><span class="undefined">@cdWidth: 50vmin;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">// mixins</span></div><div class="line"><span class="undefined">// 水平垂直居中的 flex 布局</span></div><div class="line"><span class="css"><span class="selector-class">.flex-align-justify-center</span> &#123;</span></div><div class="line"><span class="undefined">  display: flex;</span></div><div class="line"><span class="undefined">  align-items: center;</span></div><div class="line"><span class="undefined">  justify-content: center;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">// 直径为 width 的圆</span></div><div class="line"><span class="css"><span class="selector-class">.circle</span> (@<span class="keyword">width</span>) &#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">width</span>: @<span class="keyword">width</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">height</span>: @<span class="keyword">width</span>;</span></div><div class="line"><span class="undefined">  border-radius: 50%;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">// block 伪类</span></div><div class="line"><span class="css"><span class="selector-class">.absolute-block</span> &#123;</span></div><div class="line"><span class="undefined">  content: '';</span></div><div class="line"><span class="undefined">  display: block;</span></div><div class="line"><span class="undefined">  position: absolute;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-class">.player</span> &#123;</span></div><div class="line"><span class="css">  <span class="selector-class">.flex-align-justify-center</span>;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">  width: 100vw;</span></div><div class="line"><span class="undefined">  height: 100vh;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">  &amp;-cd &#123;</span></div><div class="line"><span class="css">    <span class="selector-class">.flex-align-justify-center</span>;</span></div><div class="line"><span class="css">    <span class="selector-class">.circle</span>(@<span class="keyword">cdWidth</span>);</span></div><div class="line"><span class="css">    <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-id">#666</span>, <span class="selector-id">#000</span>);</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css">    <span class="selector-class">.absolute-circle-block</span> (@<span class="keyword">color</span>, @width) &#123;</span></div><div class="line"><span class="css">      <span class="selector-class">.absolute-block</span>;</span></div><div class="line"><span class="css">      <span class="selector-class">.circle</span>(@<span class="keyword">width</span>);</span></div><div class="line"><span class="css">      <span class="selector-tag">background</span>: @<span class="keyword">color</span>;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css">    &amp;<span class="selector-pseudo">::before</span> &#123;</span></div><div class="line"><span class="css">      <span class="selector-class">.absolute-circle-block</span>(<span class="selector-tag">darken</span>(<span class="selector-id">#f00</span>, 5%), 20<span class="selector-tag">vmin</span>);</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css">    &amp;<span class="selector-pseudo">::after</span> &#123;</span></div><div class="line"><span class="css">      <span class="selector-class">.absolute-circle-block</span>(<span class="selector-id">#222</span>, 5<span class="selector-tag">vmin</span>);</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">  &#125;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<p>去浏览器预览的时候发现，上面的代码在 PC 和 Android 手机上和预期一样，可以自动播放。但是在 iOS 上依然不行。通过更进一步的了解，发现在微信内置浏览器内有一种解决办法，利用的是微信内置浏览器的事件 <code>WeixinJSBridgeReady</code>。具体实现见下一小节。</p>
<h2 id="解决方法（不彻底）"><a href="#解决方法（不彻底）" class="headerlink" title="解决方法（不彻底）"></a>解决方法（不彻底）</h2><p>目前自动播放功能实现情况如下：</p>
<table>
<thead>
<tr>
<th>平台</th>
<th>系统自带浏览器</th>
<th>微信内置浏览器</th>
</tr>
</thead>
<tbody>
<tr>
<td>PC</td>
<td>✔️</td>
<td>✔️</td>
</tr>
<tr>
<td>Android</td>
<td>✔️</td>
<td>✔️</td>
</tr>
<tr>
<td>iOS</td>
<td>✔️</td>
<td>✔️</td>
</tr>
</tbody>
</table>
<p>在实现上述功能的基础上，增加播放旋转，点击切换播放、暂停功能。最终组件代码如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"player"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span></span></div><div class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"player-cd"</span></span></div><div class="line"><span class="tag">      <span class="attr">id</span>=<span class="string">"trigger"</span></span></div><div class="line"><span class="tag">      <span class="attr">:style</span>=<span class="string">"&#123;transform: 'rotate(' + transformValue + 'deg)'&#125;"</span></span></div><div class="line"><span class="tag">    &gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">audio</span></span></div><div class="line"><span class="tag">        <span class="attr">:src</span>=<span class="string">"src"</span></span></div><div class="line"><span class="tag">        <span class="attr">id</span>=<span class="string">"audio"</span></span></div><div class="line"><span class="tag">        <span class="attr">loop</span></span></div><div class="line"><span class="tag">      &gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></div><div class="line"><span class="undefined">  data () &#123;</span></div><div class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></div><div class="line"><span class="javascript">      src: <span class="string">'http://o9o8lcfa3.bkt.clouddn.com/%E5%88%9A%E5%A5%BD%E9%81%87%E8%A7%81%E4%BD%A0.m4a'</span>,</span></div><div class="line"><span class="javascript">      playing: <span class="literal">false</span>,</span></div><div class="line"><span class="undefined">      transformValue: 10,</span></div><div class="line"><span class="javascript">      transformInterval: <span class="literal">null</span></span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">  &#125;,</span></div><div class="line"><span class="undefined">  mounted () &#123;</span></div><div class="line"><span class="javascript">    <span class="keyword">let</span> trigger = <span class="built_in">document</span>.getElementById(<span class="string">'trigger'</span>)</span></div><div class="line"><span class="javascript">    <span class="keyword">let</span> audio = <span class="built_in">document</span>.getElementById(<span class="string">'audio'</span>)</span></div><div class="line"><span class="javascript">    trigger.addEventListener(<span class="string">'touchstart'</span>, () =&gt; &#123;</span></div><div class="line"><span class="undefined">      audio.play()</span></div><div class="line"><span class="javascript">      <span class="keyword">this</span>.togglePlay()</span></div><div class="line"><span class="undefined">    &#125;)</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="comment">// 单独处理微信内置浏览器自动播放</span></span></div><div class="line"><span class="javascript">    <span class="built_in">document</span>.addEventListener(<span class="string">'WeixinJSBridgeReady'</span>, () =&gt; &#123;</span></div><div class="line"><span class="undefined">      audio.play()</span></div><div class="line"><span class="javascript">    &#125;, <span class="literal">false</span>)</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="comment">// 模拟触发 「touchstart」 事件</span></span></div><div class="line"><span class="javascript">    <span class="keyword">this</span>.createTouchstartEventAndDispatch(trigger)</span></div><div class="line"><span class="undefined">  &#125;,</span></div><div class="line"><span class="undefined">  methods: &#123;</span></div><div class="line"><span class="undefined">    createTouchstartEventAndDispatch (el) &#123;</span></div><div class="line"><span class="javascript">      <span class="keyword">let</span> event = <span class="built_in">document</span>.createEvent(<span class="string">'Events'</span>)</span></div><div class="line"><span class="javascript">      event.initEvent(<span class="string">'touchstart'</span>, <span class="literal">true</span>, <span class="literal">true</span>)</span></div><div class="line"><span class="undefined">      el.dispatchEvent(event)</span></div><div class="line"><span class="undefined">    &#125;,</span></div><div class="line"><span class="undefined">    togglePlay () &#123;</span></div><div class="line"><span class="javascript">      <span class="keyword">this</span>.playing = !<span class="keyword">this</span>.playing</span></div><div class="line"><span class="javascript">      <span class="keyword">if</span> (<span class="keyword">this</span>.playing) &#123;</span></div><div class="line"><span class="javascript">        <span class="keyword">this</span>.transformInterval = setInterval(</span></div><div class="line"><span class="javascript">          () =&gt; <span class="keyword">this</span>.changeTransformValue(),</span></div><div class="line"><span class="undefined">          100</span></div><div class="line"><span class="undefined">        )</span></div><div class="line"><span class="javascript">      &#125; <span class="keyword">else</span> &#123;</span></div><div class="line"><span class="javascript">        clearInterval(<span class="keyword">this</span>.transformInterval)</span></div><div class="line"><span class="javascript">        <span class="keyword">this</span>.transformInterval = <span class="literal">null</span></span></div><div class="line"><span class="undefined">      &#125;</span></div><div class="line"><span class="undefined">    &#125;,</span></div><div class="line"><span class="undefined">    changeTransformValue () &#123;</span></div><div class="line"><span class="javascript">      <span class="keyword">this</span>.transformValue += <span class="number">10</span></span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">  &#125;,</span></div><div class="line"><span class="undefined">  watch: &#123;</span></div><div class="line"><span class="undefined">    playing (playing) &#123;</span></div><div class="line"><span class="javascript">      <span class="keyword">let</span> audio = <span class="built_in">document</span>.getElementById(<span class="string">'audio'</span>)</span></div><div class="line"><span class="javascript">      <span class="keyword">if</span> (playing) &#123;</span></div><div class="line"><span class="undefined">        audio.play()</span></div><div class="line"><span class="javascript">      &#125; <span class="keyword">else</span> &#123;</span></div><div class="line"><span class="undefined">        audio.pause()</span></div><div class="line"><span class="undefined">      &#125;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">  &#125;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"less"</span> <span class="attr">scoped</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">// var</span></div><div class="line"><span class="undefined">@cdWidth: 50vmin;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">// mixins</span></div><div class="line"><span class="undefined">// 水平垂直居中的 flex 布局</span></div><div class="line"><span class="css"><span class="selector-class">.flex-align-justify-center</span> &#123;</span></div><div class="line"><span class="undefined">  display: flex;</span></div><div class="line"><span class="undefined">  align-items: center;</span></div><div class="line"><span class="undefined">  justify-content: center;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">// 直径为 width 的圆</span></div><div class="line"><span class="css"><span class="selector-class">.circle</span> (@<span class="keyword">width</span>) &#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">width</span>: @<span class="keyword">width</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">height</span>: @<span class="keyword">width</span>;</span></div><div class="line"><span class="undefined">  border-radius: 50%;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">// block 伪类</span></div><div class="line"><span class="css"><span class="selector-class">.absolute-block</span> &#123;</span></div><div class="line"><span class="undefined">  content: '';</span></div><div class="line"><span class="undefined">  display: block;</span></div><div class="line"><span class="undefined">  position: absolute;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-class">.player</span> &#123;</span></div><div class="line"><span class="css">  <span class="selector-class">.flex-align-justify-center</span>;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">  width: 100vw;</span></div><div class="line"><span class="undefined">  height: 100vh;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">  &amp;-cd &#123;</span></div><div class="line"><span class="css">    <span class="selector-class">.flex-align-justify-center</span>;</span></div><div class="line"><span class="css">    <span class="selector-class">.circle</span>(@<span class="keyword">cdWidth</span>);</span></div><div class="line"><span class="css">    <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-id">#666</span>, <span class="selector-id">#000</span>);</span></div><div class="line"><span class="css">    <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> <span class="selector-class">.2s</span> <span class="selector-tag">linear</span>;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css">    <span class="selector-class">.absolute-circle-block</span> (@<span class="keyword">color</span>, @width) &#123;</span></div><div class="line"><span class="css">      <span class="selector-class">.absolute-block</span>;</span></div><div class="line"><span class="css">      <span class="selector-class">.circle</span>(@<span class="keyword">width</span>);</span></div><div class="line"><span class="css">      <span class="selector-tag">background</span>: @<span class="keyword">color</span>;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css">    &amp;<span class="selector-pseudo">::before</span> &#123;</span></div><div class="line"><span class="css">      <span class="selector-class">.absolute-circle-block</span>(<span class="selector-tag">darken</span>(<span class="selector-id">#f00</span>, 5%), 20<span class="selector-tag">vmin</span>);</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css">    &amp;<span class="selector-pseudo">::after</span> &#123;</span></div><div class="line"><span class="css">      <span class="selector-class">.absolute-circle-block</span>(<span class="selector-id">#222</span>, 5<span class="selector-tag">vmin</span>);</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">  &#125;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<p>附上线上<a href="https://codepen.io/ricosmall/pen/qoYjOP" target="_blank" rel="external">预览地址</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;用 Vue 开发一个 HTML5 活动页面，活动页面需要一个循环播放的背景音乐，一进入页面就自动播放。按照正常思维，直接插入 &lt;code&gt;audio&lt;/code&gt; 元素，设置好属性就算完了。就像下面这样：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;path/to/music&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;autoplay&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;audio&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样多简单啊，在 PC 浏览器上也表现正常。拿到手机上测试一下，才发现根本不出声音。问题就来了，为啥在手机上不能自动播放呢。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
      <category term="audio" scheme="http://yoursite.com/tags/audio/"/>
    
      <category term="HTML5" scheme="http://yoursite.com/tags/HTML5/"/>
    
      <category term="mobile" scheme="http://yoursite.com/tags/mobile/"/>
    
  </entry>
  
  <entry>
    <title>学习React（二）</title>
    <link href="http://yoursite.com/2018/03/29/%E5%AD%A6%E4%B9%A0React%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2018/03/29/学习React（二）/</id>
    <published>2018-03-29T15:10:34.000Z</published>
    <updated>2018-03-29T15:26:53.682Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Components"><a href="#Components" class="headerlink" title="Components"></a>Components</h2><p>React 组件分为函数式组件（Functional Components） 和类式组件（Class Components）。从字面意思可以看出来，组件可以写成函数形式，也可以写成类的形式。</p>
<a id="more"></a>
<h3 id="Functional-Components"><a href="#Functional-Components" class="headerlink" title="Functional Components"></a>Functional Components</h3><p><code>index.js</code> 文件内容：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> ReactDom <span class="keyword">from</span> <span class="string">'react-dom'</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Welcome</span> (<span class="params">props</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;props.name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></div><div class="line">&#125;</div><div class="line"></div><div class="line">ReactDom.render(</div><div class="line">    &lt;Welcome name=<span class="string">"John"</span> /&gt;,</div><div class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>)</div><div class="line">)</div></pre></td></tr></table></figure>
<h3 id="Class-Components"><a href="#Class-Components" class="headerlink" title="Class Components"></a>Class Components</h3><p><code>index.js</code> 文件内容：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> ReactDom <span class="keyword">from</span> <span class="string">'react-dom'</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Welcome</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</div><div class="line">    <span class="keyword">constructor</span> () &#123;</div><div class="line">        <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;this.props.name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">ReactDom.render(</div><div class="line">    &lt;Welcome name=<span class="string">"John"</span> /&gt;,</div><div class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>)</div><div class="line">)</div></pre></td></tr></table></figure>
<p><code>index.html</code> 文件内容：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>React Demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./index.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>Functional Components 和 Class Components 可以混用，本质上都是传入只读的 props 对象，保证数据的单向流动，React 根据 props 对象传入的内容更新渲染 DOM。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Components&quot;&gt;&lt;a href=&quot;#Components&quot; class=&quot;headerlink&quot; title=&quot;Components&quot;&gt;&lt;/a&gt;Components&lt;/h2&gt;&lt;p&gt;React 组件分为函数式组件（Functional Components） 和类式组件（Class Components）。从字面意思可以看出来，组件可以写成函数形式，也可以写成类的形式。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="React" scheme="http://yoursite.com/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>解决SecureCRT无法保存密码的问题</title>
    <link href="http://yoursite.com/2018/03/28/%E8%A7%A3%E5%86%B3SecureCRT%E6%97%A0%E6%B3%95%E4%BF%9D%E5%AD%98%E5%AF%86%E7%A0%81%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/03/28/解决SecureCRT无法保存密码的问题/</id>
    <published>2018-03-28T15:08:45.000Z</published>
    <updated>2018-03-28T15:27:43.956Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在 SecureCRT 上登录同一台机器，每次都要输入密码，非常繁琐。登录的时候「保存密码」的选项又是勾上的，就是不起作用，怎么办呢？</p>
<p><img src="http://o9o8lcfa3.bkt.clouddn.com/securecrt-connect.png" alt="login-settings"></p>
<a id="more"></a>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>打开 secureCRT =&gt; Preferences，左侧选择 General，去掉右侧面板中 Use Keychain 选项，如下图：</p>
<p><img src="http://o9o8lcfa3.bkt.clouddn.com/securecrt-settings.png" alt="securecrt-settings"></p>
<p>然后登录的时候确保「保存密码」 选项选中的情况下，成功登录一次之后，密码就会保存下来了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;在 SecureCRT 上登录同一台机器，每次都要输入密码，非常繁琐。登录的时候「保存密码」的选项又是勾上的，就是不起作用，怎么办呢？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://o9o8lcfa3.bkt.clouddn.com/securecrt-connect.png&quot; alt=&quot;login-settings&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SecureCRT" scheme="http://yoursite.com/tags/SecureCRT/"/>
    
  </entry>
  
  <entry>
    <title>学习React（一）</title>
    <link href="http://yoursite.com/2018/03/27/%E5%AD%A6%E4%B9%A0React%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2018/03/27/学习React（一）/</id>
    <published>2018-03-27T13:57:11.000Z</published>
    <updated>2018-03-27T15:30:54.663Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>随着了解的使用 React 大法的项目慢慢变多，渐渐产生了兴趣，想要从头好好看看 React。因此就有了这个起手式。</p>
<a id="more"></a>
<h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 新建目录</span></div><div class="line">mkdir demo</div><div class="line"></div><div class="line"><span class="comment"># 初始化</span></div><div class="line">yarn init -y</div><div class="line"></div><div class="line"><span class="comment"># 安装 react、react-dom</span></div><div class="line">yarn add react react-dom</div><div class="line"></div><div class="line"><span class="comment"># 新建入口文件</span></div><div class="line">touch index.js</div><div class="line"></div><div class="line"><span class="comment"># 编辑入口文件</span></div><div class="line">vim index.js</div><div class="line"></div><div class="line"><span class="comment"># 新建 index.html</span></div><div class="line">touch index.html</div><div class="line"></div><div class="line"><span class="comment"># 编辑 index.html</span></div><div class="line">vim index.html</div><div class="line"></div><div class="line"><span class="comment"># 全局安装 parcel，如果已经安装可以跳过</span></div><div class="line">npm i -g parcel</div><div class="line"></div><div class="line"><span class="comment"># 启动项目</span></div><div class="line">parcel index.html</div><div class="line"></div><div class="line"><span class="comment"># 在浏览器中打开 http://localhost:1234 预览</span></div></pre></td></tr></table></figure>
<p><code>index.js</code> 文件的内容：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></div><div class="line"><span class="keyword">import</span> ReactDom <span class="keyword">from</span> <span class="string">'react-dom'</span></div><div class="line"></div><div class="line">ReactDom.render(</div><div class="line">    &lt;h1&gt;Hello World&lt;<span class="regexp">/h1&gt;,</span></div><div class="line"><span class="regexp">    document.getElementById('root')</span></div><div class="line"><span class="regexp">)</span></div></pre></td></tr></table></figure>
<p><code>index.html</code> 文件内容：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>React Demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./index.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;随着了解的使用 React 大法的项目慢慢变多，渐渐产生了兴趣，想要从头好好看看 React。因此就有了这个起手式。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="React" scheme="http://yoursite.com/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>python-二分查找</title>
    <link href="http://yoursite.com/2017/12/05/python-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
    <id>http://yoursite.com/2017/12/05/python-二分查找/</id>
    <published>2017-12-05T01:41:19.000Z</published>
    <updated>2018-03-27T13:52:33.772Z</updated>
    
    <content type="html"><![CDATA[<p>常见简单算法之 – 二分查找</p>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary_search</span><span class="params">(list, item)</span>:</span></div><div class="line">    low = <span class="number">0</span></div><div class="line">    high = len(list) - <span class="number">1</span></div><div class="line"></div><div class="line">    <span class="keyword">while</span> low &lt;= high:</div><div class="line">        mid = int((low + high) / <span class="number">2</span>)</div><div class="line">        guess = list[mid]</div><div class="line">        <span class="keyword">if</span> guess == item:</div><div class="line">            <span class="keyword">return</span> mid</div><div class="line">        <span class="keyword">if</span> guess &gt; item:</div><div class="line">            high = mid - <span class="number">1</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            low = mid + <span class="number">1</span></div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="keyword">None</span>    </div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># test case</span></div><div class="line">test_list = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>]</div><div class="line">print(binary_search(test_list, <span class="number">5</span>))</div><div class="line">print(binary_search(test_list, <span class="number">-1</span>))</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常见简单算法之 – 二分查找&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="algorithm" scheme="http://yoursite.com/tags/algorithm/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="binary_search" scheme="http://yoursite.com/tags/binary-search/"/>
    
      <category term="二分查找" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
    
  </entry>
  
  <entry>
    <title>XSS防御</title>
    <link href="http://yoursite.com/2017/11/24/XSS%E9%98%B2%E5%BE%A1/"/>
    <id>http://yoursite.com/2017/11/24/XSS防御/</id>
    <published>2017-11-24T11:57:23.000Z</published>
    <updated>2018-03-27T13:52:33.772Z</updated>
    
    <content type="html"><![CDATA[<p>XSS 攻击是一个很大的 Web 安全问题。XSS 攻击无处不在，但是到目前为止没有一套简单成熟的防御机制。</p>
<a id="more"></a>
<h3 id="XSS-攻击"><a href="#XSS-攻击" class="headerlink" title="XSS 攻击"></a>XSS 攻击</h3><ol>
<li><p>存储型 XSS</p>
</li>
<li><p>反射型 XSS</p>
</li>
<li><p>DOM XSS</p>
</li>
</ol>
<h3 id="XSS-防御"><a href="#XSS-防御" class="headerlink" title="XSS 防御"></a>XSS 防御</h3><table>
<thead>
<tr>
<th>data type</th>
<th>context</th>
<th>code example</th>
<th>defend method</th>
</tr>
</thead>
<tbody>
<tr>
<td>String</td>
<td>HTML Body</td>
<td><code>&lt;span&gt;UNTRUSTED DATA&lt;/span&gt;</code></td>
<td>HTML Entity 编码</td>
</tr>
<tr>
<td>String</td>
<td>安全 HTML 变量</td>
<td><code>&lt;input type=&quot;text&quot; name=&quot;fname&quot; value=&quot;UNTRUSTED DATA&quot;&gt;</code></td>
<td>1. HTML Attribute 编码 <br> 2. 只把不可信数据放在安全白名单内的变量上 <br> 3. 严格地校验不安全变量，如 background、id 和 name</td>
</tr>
<tr>
<td>String</td>
<td>GET 参数</td>
<td><code>&lt;a href=&quot;/site/search?value=UNTRUSTED DATA&quot;&gt;clickme&lt;/a&gt;</code></td>
<td>URL 编码</td>
</tr>
<tr>
<td>String</td>
<td>使用在 src 或 href 变量上的不可信 URLs</td>
<td><code>&lt;a href=&quot;UNTRUSTED URL&quot;&gt;clickme&lt;/a&gt;</code> <br> <code>&lt;iframe src=&quot;UNTRUSTED URL&quot;&gt;</code></td>
<td>1. 对输入进行规范化 <br> 2. URL 校验 <br> 3. URL 安全性认证 <br> 4. 只允许使用 http 和 https 协议（避免使用 javscript 协议去打开一个新窗口）  <br> 5. HTML Attribute 编码</td>
</tr>
<tr>
<td>String</td>
<td>CSS 值</td>
<td><code>&lt;div style=&quot;width: UNTRUSTED DATA;&quot;&gt;Selection&lt;/div&gt;</code></td>
<td>1. 使用 CSS 编码 <br> 2. 使用 CSS Hex 编码 <br> 3. 良好的 CSS 设计</td>
</tr>
<tr>
<td>String</td>
<td>javascript 变量</td>
<td><code>&lt;script&gt;var currentValue=&#39;UNTRUSTED DATA&#39;;&lt;/script&gt;&lt;scrip&gt;someFunction(&#39;UNTRUSTED DATA&#39;);&lt;/script&gt;</code></td>
<td>1. 确保所有变量值都被引号括起来 <br> 2. 使用 javascript Hex 编码 <br> 3. 使用 javascript Unicode 编码 <br> 4. 避免使用反斜杠转义（\”, \’ 或者 \）</td>
</tr>
<tr>
<td>HTML</td>
<td>HTML Body</td>
<td><code>&lt;div&gt;UNTRUSTED HTML&lt;/div&gt;</code></td>
<td>HTML 校验（JSoup, AntiSamy, HTML Sanitizer）</td>
</tr>
<tr>
<td>String</td>
<td>DOM XSS</td>
<td><code>&lt;script&gt;document.write(&#39;UNTRUSTED INPUT: &#39;+window.location.hash);&lt;/script&gt;</code></td>
<td>基于 DOM 操作的 XSS 漏洞防御措施</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;XSS 攻击是一个很大的 Web 安全问题。XSS 攻击无处不在，但是到目前为止没有一套简单成熟的防御机制。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="XSS" scheme="http://yoursite.com/tags/XSS/"/>
    
      <category term="Web安全" scheme="http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>nginx反向代理的Express如何拿到真实客户端IP</title>
    <link href="http://yoursite.com/2017/10/27/nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E7%9A%84Express%E5%A6%82%E4%BD%95%E6%8B%BF%E5%88%B0%E7%9C%9F%E5%AE%9E%E5%AE%A2%E6%88%B7%E7%AB%AFIP/"/>
    <id>http://yoursite.com/2017/10/27/nginx反向代理的Express如何拿到真实客户端IP/</id>
    <published>2017-10-27T10:56:17.000Z</published>
    <updated>2018-03-27T13:52:33.772Z</updated>
    
    <content type="html"><![CDATA[<p>最近碰到一个苦恼的问题，Express 的后端打印客户端的真实 IP 地址，结果打印出来的全部是<code>127.0.0.1</code>。如果你也碰到了这个问题，那么恭喜你，我接下来就告诉你怎么解决。</p>
<a id="more"></a>
<p>正常来说，引起这个问题的原因就是服务器做了 nginx 反向代理。所有客户端的请求都先打到 nginx 服务器，然后 nginx 服务器再去请求 node 服务器，如果 nginx 和 node 服务器部署在同一台机上面，那么 node 能拿到的 IP 地址其实就是本机地址，也就是<code>127.0.0.1</code>。</p>
<p>找到引起问题的根源，就可以对症下药了。</p>
<h3 id="修改-nginx-配置"><a href="#修改-nginx-配置" class="headerlink" title="修改 nginx 配置"></a>修改 nginx 配置</h3><p>配置修改如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen       80;</div><div class="line">    server_name  website.com;</div><div class="line"></div><div class="line">    location / &#123;</div><div class="line">        proxy_set_header  Host $host;</div><div class="line">        proxy_set_header  X-Real-IP $remote_addr;</div><div class="line">        proxy_set_header  X-Forwarded-Proto https;</div><div class="line">        proxy_set_header  X-Forwarded-For $remote_addr;</div><div class="line">        proxy_set_header  X-Forwarded-Host $remote_addr;</div><div class="line">        proxy_pass    http://127.0.0.1:3000/;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="修改-Express-配置"><a href="#修改-Express-配置" class="headerlink" title="修改 Express 配置"></a>修改 Express 配置</h3><p>修改 <code>app.js</code> 文件，增加一行代码：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">app.set(<span class="string">'trust proxy'</span>, <span class="string">'loopback'</span>);</div></pre></td></tr></table></figure>
<h3 id="获取客户端真实-IP-地址"><a href="#获取客户端真实-IP-地址" class="headerlink" title="获取客户端真实 IP 地址"></a>获取客户端真实 IP 地址</h3><p>在代码中使用<code>req.ip</code>就可以获取到用户的真实 IP 地址了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近碰到一个苦恼的问题，Express 的后端打印客户端的真实 IP 地址，结果打印出来的全部是&lt;code&gt;127.0.0.1&lt;/code&gt;。如果你也碰到了这个问题，那么恭喜你，我接下来就告诉你怎么解决。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="nginx" scheme="http://yoursite.com/tags/nginx/"/>
    
      <category term="Express" scheme="http://yoursite.com/tags/Express/"/>
    
      <category term="IP" scheme="http://yoursite.com/tags/IP/"/>
    
  </entry>
  
  <entry>
    <title>Linux下SVN账号密码保存方法</title>
    <link href="http://yoursite.com/2017/10/18/Linux%E4%B8%8BSVN%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81%E4%BF%9D%E5%AD%98%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2017/10/18/Linux下SVN账号密码保存方法/</id>
    <published>2017-10-18T01:47:11.000Z</published>
    <updated>2018-03-27T13:52:33.772Z</updated>
    
    <content type="html"><![CDATA[<p>Linux下进行SVN操作的时候总是提示要输入密码，很不方便，尤其是集成到<code>npm scripts</code>上的时候，你不想明写密码，但是如果不写，每次都提示要输入密码，不同用户协作起来更加麻烦。</p>
<a id="more"></a>
<h2 id="修改配置文件config"><a href="#修改配置文件config" class="headerlink" title="修改配置文件config"></a>修改配置文件<code>config</code></h2><p>文件位置<code>/home/[username]/.subversion/config</code></p>
<p>用vim打开</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /home/[username]/.subversion/config</div></pre></td></tr></table></figure>
<p>原配置文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div></pre></td><td class="code"><pre><div class="line">### This file configures various client-side behaviors.</div><div class="line">###</div><div class="line">### The commented-out examples below are intended to demonstrate</div><div class="line">### how to use this file.</div><div class="line"></div><div class="line">### Section for authentication and authorization customizations.</div><div class="line">[auth]</div><div class="line">### Set password stores used by Subversion. They should be</div><div class="line">### delimited by spaces or commas. The order of values determines</div><div class="line">### the order in which password stores are used.</div><div class="line">### Valid password stores:</div><div class="line">###   gnome-keyring        (Unix-like systems)</div><div class="line">###   kwallet              (Unix-like systems)</div><div class="line">###   gpg-agent            (Unix-like systems)</div><div class="line">###   keychain             (Mac OS X)</div><div class="line">###   windows-cryptoapi    (Windows)</div><div class="line"># password-stores = gpg-agent,gnome-keyring,kwallet</div><div class="line">### To disable all password stores, use an empty list:</div><div class="line"># password-stores =</div><div class="line">###</div><div class="line">### Set KWallet wallet used by Subversion. If empty or unset,</div><div class="line">### then the default network wallet will be used.</div><div class="line"># kwallet-wallet =</div><div class="line">###</div><div class="line">### Include PID (Process ID) in Subversion application name when</div><div class="line">### using KWallet. It defaults to &apos;no&apos;.</div><div class="line"># kwallet-svn-application-name-with-pid = yes</div><div class="line">###</div><div class="line">### Set ssl-client-cert-file-prompt to &apos;yes&apos; to cause the client</div><div class="line">### to prompt for a path to a client cert file when the server</div><div class="line">### requests a client cert but no client cert file is found in the</div><div class="line">### expected place (see the &apos;ssl-client-cert-file&apos; option in the</div><div class="line">### &apos;servers&apos; configuration file). Defaults to &apos;no&apos;.</div><div class="line"># ssl-client-cert-file-prompt = no</div><div class="line">###</div><div class="line">### The rest of the [auth] section in this file has been deprecated.</div><div class="line">### Both &apos;store-passwords&apos; and &apos;store-auth-creds&apos; can now be</div><div class="line">### specified in the &apos;servers&apos; file in your config directory</div><div class="line">### and are documented there. Anything specified in this section</div><div class="line">### is overridden by settings specified in the &apos;servers&apos; file.</div><div class="line"># store-passwords = no</div><div class="line"># store-auth-creds = no</div><div class="line"></div><div class="line">### Section for configuring external helper applications.</div><div class="line">[helpers]</div><div class="line">### Set editor-cmd to the command used to invoke your text editor.</div><div class="line">###   This will override the environment variables that Subversion</div><div class="line">###   examines by default to find this information ($EDITOR,</div><div class="line">###   et al).</div><div class="line"># editor-cmd = editor (vi, emacs, notepad, etc.)</div><div class="line">editor-cmd = vim</div><div class="line">### Set diff-cmd to the absolute path of your &apos;diff&apos; program.</div><div class="line">###   This will override the compile-time default, which is to use</div><div class="line">###   Subversion&apos;s internal diff implementation.</div><div class="line"># diff-cmd = diff_program (diff, gdiff, etc.)</div><div class="line">diff-cmd = /usr/local/bin/svndiff.sh</div><div class="line">### Diff-extensions are arguments passed to an external diff</div><div class="line">### program or to Subversion&apos;s internal diff implementation.</div><div class="line">### Set diff-extensions to override the default arguments (&apos;-u&apos;).</div><div class="line"># diff-extensions = -u -p</div><div class="line">### Set diff3-cmd to the absolute path of your &apos;diff3&apos; program.</div><div class="line">###   This will override the compile-time default, which is to use</div><div class="line">###   Subversion&apos;s internal diff3 implementation.</div><div class="line"># diff3-cmd = diff3_program (diff3, gdiff3, etc.)</div><div class="line">### Set diff3-has-program-arg to &apos;yes&apos; if your &apos;diff3&apos; program</div><div class="line">###   accepts the &apos;--diff-program&apos; option.</div><div class="line"># diff3-has-program-arg = [yes | no]</div><div class="line">### Set merge-tool-cmd to the command used to invoke your external</div><div class="line">### merging tool of choice. Subversion will pass 5 arguments to</div><div class="line">### the specified command: base theirs mine merged wcfile</div><div class="line"># merge-tool-cmd = merge_command</div><div class="line"></div><div class="line">### Section for configuring tunnel agents.</div><div class="line">[tunnels]</div><div class="line">### Configure svn protocol tunnel schemes here.  By default, only</div><div class="line">### the &apos;ssh&apos; scheme is defined.  You can define other schemes to</div><div class="line">### be used with &apos;svn+scheme://hostname/path&apos; URLs.  A scheme</div><div class="line">### definition is simply a command, optionally prefixed by an</div><div class="line">### environment variable name which can override the command if it</div><div class="line">### is defined.  The command (or environment variable) may contain</div><div class="line">### arguments, using standard shell quoting for arguments with</div><div class="line">### spaces.  The command will be invoked as:</div><div class="line">###   &lt;command&gt; &lt;hostname&gt; svnserve -t</div><div class="line">### (If the URL includes a username, then the hostname will be</div><div class="line">### passed to the tunnel agent as &lt;user&gt;@&lt;hostname&gt;.)  If the</div><div class="line">### built-in ssh scheme were not predefined, it could be defined</div><div class="line">### as:</div><div class="line"># ssh = $SVN_SSH ssh -q -o ControlMaster=no</div><div class="line">### If you wanted to define a new &apos;rsh&apos; scheme, to be used with</div><div class="line">### &apos;svn+rsh:&apos; URLs, you could do so as follows:</div><div class="line"># rsh = rsh</div><div class="line">### Or, if you wanted to specify a full path and arguments:</div><div class="line"># rsh = /path/to/rsh -l myusername</div><div class="line">### On Windows, if you are specifying a full path to a command,</div><div class="line">### use a forward slash (/) or a paired backslash (\\) as the</div><div class="line">### path separator.  A single backslash will be treated as an</div><div class="line">### escape for the following character.</div><div class="line"></div><div class="line">### Section for configuring miscellaneous Subversion options.</div><div class="line">[miscellany]</div><div class="line">### Set global-ignores to a set of whitespace-delimited globs</div><div class="line">### which Subversion will ignore in its &apos;status&apos; output, and</div><div class="line">### while importing or adding files and directories.</div><div class="line">### &apos;*&apos; matches leading dots, e.g. &apos;*.rej&apos; matches &apos;.foo.rej&apos;.</div><div class="line"># global-ignores = *.o *.lo *.la *.al .libs *.so *.so.[0-9]* *.a *.pyc *.pyo __pycache__</div><div class="line">#   *.rej *~ #*# .#* .*.swp .DS_Store [Tt]humbs.db</div><div class="line">### Set log-encoding to the default encoding for log messages</div><div class="line"># log-encoding = latin1</div><div class="line">### Set use-commit-times to make checkout/update/switch/revert</div><div class="line">### put last-committed timestamps on every file touched.</div><div class="line"># use-commit-times = yes</div><div class="line">### Set no-unlock to prevent &apos;svn commit&apos; from automatically</div><div class="line">### releasing locks on files.</div><div class="line"># no-unlock = yes</div><div class="line">### Set mime-types-file to a MIME type registry file, used to</div><div class="line">### provide hints to Subversion&apos;s MIME type auto-detection</div><div class="line">### algorithm.</div><div class="line"># mime-types-file = /path/to/mime.types</div><div class="line">### Set preserved-conflict-file-exts to a whitespace-delimited</div><div class="line">### list of patterns matching file extensions which should be</div><div class="line">### preserved in generated conflict file names.  By default,</div><div class="line">### conflict files use custom extensions.</div><div class="line"># preserved-conflict-file-exts = doc ppt xls od?</div><div class="line">### Set enable-auto-props to &apos;yes&apos; to enable automatic properties</div><div class="line">### for &apos;svn add&apos; and &apos;svn import&apos;, it defaults to &apos;no&apos;.</div><div class="line">### Automatic properties are defined in the section &apos;auto-props&apos;.</div><div class="line"># enable-auto-props = yes</div><div class="line">### Set interactive-conflicts to &apos;no&apos; to disable interactive</div><div class="line">### conflict resolution prompting.  It defaults to &apos;yes&apos;.</div><div class="line"># interactive-conflicts = no</div><div class="line">### Set memory-cache-size to define the size of the memory cache</div><div class="line">### used by the client when accessing a FSFS repository via</div><div class="line">### ra_local (the file:// scheme). The value represents the number</div><div class="line">### of MB used by the cache.</div><div class="line"># memory-cache-size = 16</div><div class="line">### Set diff-ignore-content-type to &apos;yes&apos; to cause &apos;svn diff&apos; to</div><div class="line">### attempt to show differences of all modified files regardless</div><div class="line">### of their MIME content type.  By default, Subversion will only</div><div class="line">### attempt to show differences for files believed to have human-</div><div class="line">### readable (non-binary) content.  This option is especially</div><div class="line">### useful when Subversion is configured (via the &apos;diff-cmd&apos;</div><div class="line">### option) to employ an external differencing tool which is able</div><div class="line">### to show meaningful differences for binary file formats.  [New</div><div class="line">### in 1.9]</div><div class="line"># diff-ignore-content-type = no</div><div class="line"></div><div class="line">### Section for configuring automatic properties.</div><div class="line">[auto-props]</div><div class="line">### The format of the entries is:</div><div class="line">###   file-name-pattern = propname[=value][;propname[=value]...]</div><div class="line">### The file-name-pattern can contain wildcards (such as &apos;*&apos; and</div><div class="line">### &apos;?&apos;).  All entries which match (case-insensitively) will be</div><div class="line">### applied to the file.  Note that auto-props functionality</div><div class="line">### must be enabled, which is typically done by setting the</div><div class="line">### &apos;enable-auto-props&apos; option.</div><div class="line"># *.c = svn:eol-style=native</div><div class="line"># *.cpp = svn:eol-style=native</div><div class="line"># *.h = svn:keywords=Author Date Id Rev URL;svn:eol-style=native</div><div class="line"># *.dsp = svn:eol-style=CRLF</div><div class="line"># *.dsw = svn:eol-style=CRLF</div><div class="line"># *.sh = svn:eol-style=native;svn:executable</div><div class="line"># *.txt = svn:eol-style=native;svn:keywords=Author Date Id Rev URL;</div><div class="line"># *.png = svn:mime-type=image/png</div><div class="line"># *.jpg = svn:mime-type=image/jpeg</div><div class="line"># Makefile = svn:eol-style=native</div><div class="line"></div><div class="line">### Section for configuring working copies.</div><div class="line">[working-copy]</div><div class="line">### Set to a list of the names of specific clients that should use</div><div class="line">### exclusive SQLite locking of working copies.  This increases the</div><div class="line">### performance of the client but prevents concurrent access by</div><div class="line">### other clients.  Third-party clients may also support this</div><div class="line">### option.</div><div class="line">### Possible values:</div><div class="line">###   svn                (the command line client)</div><div class="line"># exclusive-locking-clients =</div><div class="line">### Set to true to enable exclusive SQLite locking of working</div><div class="line">### copies by all clients using the 1.8 APIs.  Enabling this may</div><div class="line">### cause some clients to fail to work properly. This does not have</div><div class="line">### to be set for exclusive-locking-clients to work.</div><div class="line"># exclusive-locking = false</div><div class="line">### Set the SQLite busy timeout in milliseconds: the maximum time</div><div class="line">### the client waits to get access to the SQLite database before</div><div class="line">### returning an error.  The default is 10000, i.e. 10 seconds.</div><div class="line">### Longer values may be useful when exclusive locking is enabled.</div><div class="line"># busy-timeout = 10000</div></pre></td></tr></table></figure>
<p>找到：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># store-passwords = no</div></pre></td></tr></table></figure>
<p>改为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">store-passwords = yes</div></pre></td></tr></table></figure>
<p>保存，下次SVN操作的时候需要输入一次密码，之后就不用再输密码了。</p>
<h3 id="切换SVN账号"><a href="#切换SVN账号" class="headerlink" title="切换SVN账号"></a>切换SVN账号</h3><p>有时候需要切换SVN账号进行相应的操作，但是默认提示的是上一次操作的账号。碰到这个问题，只要删除<code>/home/[username]/.subversion/auth</code>即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rm -rf /home/[username]/.subversion/auth</div></pre></td></tr></table></figure>
<p>保存，下次SVN操作的时候就会提示输入用户名。</p>
<h2 id="修改配置文件servers"><a href="#修改配置文件servers" class="headerlink" title="修改配置文件servers"></a>修改配置文件<code>servers</code></h2><p>如果上面的方法没有解决每次都要输入密码的问题，可以继续修改<code>servers</code>配置文件。</p>
<p>用vim打开文件：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /home/[username]/.subversion/servers</div></pre></td></tr></table></figure>
<p>原文件内容如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div></pre></td><td class="code"><pre><div class="line">### This file specifies server-specific parameters,</div><div class="line">### including HTTP proxy information, HTTP timeout settings,</div><div class="line">### and authentication settings.</div><div class="line">###</div><div class="line">### The currently defined server options are:</div><div class="line">###   http-proxy-host            Proxy host for HTTP connection</div><div class="line">###   http-proxy-port            Port number of proxy host service</div><div class="line">###   http-proxy-username        Username for auth to proxy service</div><div class="line">###   http-proxy-password        Password for auth to proxy service</div><div class="line">###   http-proxy-exceptions      List of sites that do not use proxy</div><div class="line">###   http-timeout               Timeout for HTTP requests in seconds</div><div class="line">###   http-compression           Whether to compress HTTP requests</div><div class="line">###   http-max-connections       Maximum number of parallel server</div><div class="line">###                              connections to use for any given</div><div class="line">###                              HTTP operation.</div><div class="line">###   http-chunked-requests      Whether to use chunked transfer</div><div class="line">###                              encoding for HTTP requests body.</div><div class="line">###   neon-debug-mask            Debug mask for Neon HTTP library</div><div class="line">###   ssl-authority-files        List of files, each of a trusted CA</div><div class="line">###   ssl-trust-default-ca       Trust the system &apos;default&apos; CAs</div><div class="line">###   ssl-client-cert-file       PKCS#12 format client certificate file</div><div class="line">###   ssl-client-cert-password   Client Key password, if needed.</div><div class="line">###   ssl-pkcs11-provider        Name of PKCS#11 provider to use.</div><div class="line">###   http-library               Which library to use for http/https</div><div class="line">###                              connections.</div><div class="line">###   http-bulk-updates          Whether to request bulk update</div><div class="line">###                              responses or to fetch each file</div><div class="line">###                              in an individual request.</div><div class="line">###   store-passwords            Specifies whether passwords used</div><div class="line">###                              to authenticate against a</div><div class="line">###                              Subversion server may be cached</div><div class="line">###                              to disk in any way.</div><div class="line">###   store-plaintext-passwords  Specifies whether passwords may</div><div class="line">###                              be cached on disk unencrypted.</div><div class="line">###   store-ssl-client-cert-pp   Specifies whether passphrase used</div><div class="line">###                              to authenticate against a client</div><div class="line">###                              certificate may be cached to disk</div><div class="line">###                              in any way</div><div class="line">###   store-ssl-client-cert-pp-plaintext</div><div class="line">###                              Specifies whether client cert</div><div class="line">###                              passphrases may be cached on disk</div><div class="line">###                              unencrypted (i.e., as plaintext).</div><div class="line">###   store-auth-creds           Specifies whether any auth info</div><div class="line">###                              (passwords, server certs, etc.)</div><div class="line">###                              may be cached to disk.</div><div class="line">###   username                   Specifies the default username.</div><div class="line">###</div><div class="line">### Set store-passwords to &apos;no&apos; to avoid storing passwords on disk</div><div class="line">### in any way, including in password stores.  It defaults to</div><div class="line">### &apos;yes&apos;, but Subversion will never save your password to disk in</div><div class="line">### plaintext unless explicitly configured to do so.</div><div class="line">### Note that this option only prevents saving of *new* passwords;</div><div class="line">### it doesn&apos;t invalidate existing passwords.  (To do that, remove</div><div class="line">### the cache files by hand as described in the Subversion book.)</div><div class="line">###</div><div class="line">### Set store-plaintext-passwords to &apos;no&apos; to avoid storing</div><div class="line">### passwords in unencrypted form in the auth/ area of your config</div><div class="line">### directory. Set it to &apos;yes&apos; to allow Subversion to store</div><div class="line">### unencrypted passwords in the auth/ area.  The default is</div><div class="line">### &apos;ask&apos;, which means that Subversion will ask you before</div><div class="line">### saving a password to disk in unencrypted form.  Note that</div><div class="line">### this option has no effect if either &apos;store-passwords&apos; or</div><div class="line">### &apos;store-auth-creds&apos; is set to &apos;no&apos;.</div><div class="line">###</div><div class="line">### Set store-ssl-client-cert-pp to &apos;no&apos; to avoid storing ssl</div><div class="line">### client certificate passphrases in the auth/ area of your</div><div class="line">### config directory.  It defaults to &apos;yes&apos;, but Subversion will</div><div class="line">### never save your passphrase to disk in plaintext unless</div><div class="line">### explicitly configured to do so.</div><div class="line">###</div><div class="line">### Note store-ssl-client-cert-pp only prevents the saving of *new*</div><div class="line">### passphrases; it doesn&apos;t invalidate existing passphrases.  To do</div><div class="line">### that, remove the cache files by hand as described in the</div><div class="line">### Subversion book at http://svnbook.red-bean.com/nightly/en/\</div><div class="line">###                    svn.serverconfig.netmodel.html\</div><div class="line">###                    #svn.serverconfig.netmodel.credcache</div><div class="line">###</div><div class="line">### Set store-ssl-client-cert-pp-plaintext to &apos;no&apos; to avoid storing</div><div class="line">### passphrases in unencrypted form in the auth/ area of your</div><div class="line">### config directory.  Set it to &apos;yes&apos; to allow Subversion to</div><div class="line">### store unencrypted passphrases in the auth/ area.  The default</div><div class="line">### is &apos;ask&apos;, which means that Subversion will prompt before</div><div class="line">### saving a passphrase to disk in unencrypted form.  Note that</div><div class="line">### this option has no effect if either &apos;store-auth-creds&apos; or</div><div class="line">### &apos;store-ssl-client-cert-pp&apos; is set to &apos;no&apos;.</div><div class="line">###</div><div class="line">### Set store-auth-creds to &apos;no&apos; to avoid storing any Subversion</div><div class="line">### credentials in the auth/ area of your config directory.</div><div class="line">### Note that this includes SSL server certificates.</div><div class="line">### It defaults to &apos;yes&apos;.  Note that this option only prevents</div><div class="line">### saving of *new* credentials;  it doesn&apos;t invalidate existing</div><div class="line">### caches.  (To do that, remove the cache files by hand.)</div><div class="line">###</div><div class="line">### HTTP timeouts, if given, are specified in seconds.  A timeout</div><div class="line">### of 0, i.e. zero, causes a builtin default to be used.</div><div class="line">###</div><div class="line">### Most users will not need to explicitly set the http-library</div><div class="line">### option, but valid values for the option include:</div><div class="line">###    &apos;serf&apos;: Serf-based module (Subversion 1.5 - present)</div><div class="line">###    &apos;neon&apos;: Neon-based module (Subversion 1.0 - 1.7)</div><div class="line">### Availability of these modules may depend on your specific</div><div class="line">### Subversion distribution.</div><div class="line">###</div><div class="line">### The commented-out examples below are intended only to</div><div class="line">### demonstrate how to use this file; any resemblance to actual</div><div class="line">### servers, living or dead, is entirely coincidental.</div><div class="line"></div><div class="line">### In the &apos;groups&apos; section, the URL of the repository you&apos;re</div><div class="line">### trying to access is matched against the patterns on the right.</div><div class="line">### If a match is found, the server options are taken from the</div><div class="line">### section with the corresponding name on the left.</div><div class="line"></div><div class="line">[groups]</div><div class="line"># group1 = *.collab.net</div><div class="line"># othergroup = repository.blarggitywhoomph.com</div><div class="line"># thirdgroup = *.example.com</div><div class="line"></div><div class="line">### Information for the first group:</div><div class="line"># [group1]</div><div class="line"># http-proxy-host = proxy1.some-domain-name.com</div><div class="line"># http-proxy-port = 80</div><div class="line"># http-proxy-username = blah</div><div class="line"># http-proxy-password = doubleblah</div><div class="line"># http-timeout = 60</div><div class="line"># neon-debug-mask = 130</div><div class="line"># store-plaintext-passwords = no</div><div class="line"># username = harry</div><div class="line"></div><div class="line">### Information for the second group:</div><div class="line"># [othergroup]</div><div class="line"># http-proxy-host = proxy2.some-domain-name.com</div><div class="line"># http-proxy-port = 9000</div><div class="line"># No username and password for the proxy, so use the defaults below.</div><div class="line"></div><div class="line">### You can set default parameters in the &apos;global&apos; section.</div><div class="line">### These parameters apply if no corresponding parameter is set in</div><div class="line">### a specifically matched group as shown above.  Thus, if you go</div><div class="line">### through the same proxy server to reach every site on the</div><div class="line">### Internet, you probably just want to put that server&apos;s</div><div class="line">### information in the &apos;global&apos; section and not bother with</div><div class="line">### &apos;groups&apos; or any other sections.</div><div class="line">###</div><div class="line">### Most people might want to configure password caching</div><div class="line">### parameters here, but you can also configure them per server</div><div class="line">### group (per-group settings override global settings).</div><div class="line">###</div><div class="line">### If you go through a proxy for all but a few sites, you can</div><div class="line">### list those exceptions under &apos;http-proxy-exceptions&apos;.  This only</div><div class="line">### overrides defaults, not explicitly matched server names.</div><div class="line">###</div><div class="line">### &apos;ssl-authority-files&apos; is a semicolon-delimited list of files,</div><div class="line">### each pointing to a PEM-encoded Certificate Authority (CA)</div><div class="line">### SSL certificate.  See details above for overriding security</div><div class="line">### due to SSL.</div><div class="line">[global]</div><div class="line"># http-proxy-exceptions = *.exception.com, www.internal-site.org</div><div class="line"># http-proxy-host = defaultproxy.whatever.com</div><div class="line"># http-proxy-port = 7000</div><div class="line"># http-proxy-username = defaultusername</div><div class="line"># http-proxy-password = defaultpassword</div><div class="line"># http-compression = no</div><div class="line"># No http-timeout, so just use the builtin default.</div><div class="line"># No neon-debug-mask, so neon debugging is disabled.</div><div class="line"># ssl-authority-files = /path/to/CAcert.pem;/path/to/CAcert2.pem</div><div class="line">#</div><div class="line"># Password / passphrase caching parameters:</div><div class="line"># store-passwords = no</div><div class="line"># store-ssl-client-cert-pp = no</div><div class="line"># store-plaintext-passwords = no</div><div class="line"># store-ssl-client-cert-pp-plaintext = no</div></pre></td></tr></table></figure>
<p>找到：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># store-passwords = no</div><div class="line"># store-plaintext-passwords = no</div></pre></td></tr></table></figure>
<p>修改为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">store-passwords = yes</div><div class="line">store-plaintext-passwords = yes</div></pre></td></tr></table></figure>
<p>保存，下次操作的时候就不用输入SVN密码了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux下进行SVN操作的时候总是提示要输入密码，很不方便，尤其是集成到&lt;code&gt;npm scripts&lt;/code&gt;上的时候，你不想明写密码，但是如果不写，每次都提示要输入密码，不同用户协作起来更加麻烦。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="SVN" scheme="http://yoursite.com/tags/SVN/"/>
    
  </entry>
  
  <entry>
    <title>Java后端模板引擎FreeMarker</title>
    <link href="http://yoursite.com/2017/09/30/Java%E5%90%8E%E7%AB%AF%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8EFreeMarker/"/>
    <id>http://yoursite.com/2017/09/30/Java后端模板引擎FreeMarker/</id>
    <published>2017-09-30T08:43:33.000Z</published>
    <updated>2018-03-27T13:52:33.772Z</updated>
    
    <content type="html"><![CDATA[<p>业务后端使用的是Java后端，考虑到SEO是不可忽略的需求，采用FreeMarker模板引擎做页面开发。</p>
<a id="more"></a>
<p>待更新。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;业务后端使用的是Java后端，考虑到SEO是不可忽略的需求，采用FreeMarker模板引擎做页面开发。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="FreeMarker" scheme="http://yoursite.com/tags/FreeMarker/"/>
    
  </entry>
  
  <entry>
    <title>前端框架引入的意义</title>
    <link href="http://yoursite.com/2017/09/29/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6%E5%BC%95%E5%85%A5%E7%9A%84%E6%84%8F%E4%B9%89/"/>
    <id>http://yoursite.com/2017/09/29/前端框架引入的意义/</id>
    <published>2017-09-29T09:24:47.000Z</published>
    <updated>2018-03-27T13:52:33.771Z</updated>
    
    <content type="html"><![CDATA[<p>如今的 Web 前端领域什么最火？当然是前端框架啦。 React 听过吗？ Angular 听过吗？ Vue 听过么？如果都没有听过就不用往下看了。</p>
<a id="more"></a>
<h2 id="前端框架与前端类库的区别"><a href="#前端框架与前端类库的区别" class="headerlink" title="前端框架与前端类库的区别"></a>前端框架与前端类库的区别</h2><p>jQuery 等库与前端 MVC 间的区别主要表现在以下几个方面：</p>
<h3 id="二者解决的问题存在着一定的差异"><a href="#二者解决的问题存在着一定的差异" class="headerlink" title="二者解决的问题存在着一定的差异"></a>二者解决的问题存在着一定的差异</h3><p>jQuery 主要应用于对代码、封装等问题的解决。而其也为系统实际运行提供了多种封装方法，由此稳固了代码结构的合理性设置，而前端 MVC 框架与 jQuery 等库在问题解决方面有所不同，其更加倾向于对程序组织方面问题的解决，进而推动系统中的程序运行逐渐趋于规范化。另外，前端框架为系统运行提供了一套规范化的问题解决方案，致使系统运行中出现相应问题时可及时参照方案对问题展开及时、有效的解决，且最终提高系统运行的稳定性；</p>
<h3 id="jQuery-的操作中心为-DOM-，而-MVC-框架的中心却为模型"><a href="#jQuery-的操作中心为-DOM-，而-MVC-框架的中心却为模型" class="headerlink" title="jQuery 的操作中心为 DOM ，而 MVC 框架的中心却为模型"></a>jQuery 的操作中心为 DOM ，而 MVC 框架的中心却为模型</h3><p>因而 MVC 与 jQuery 相比其流程的变更更为及时，且也为现代工程师的代码编写提供了有利条件。另外， MVC 框架解决了传统 HTML 源码处理中的问题，促使相关工作人员在实际工作开展过程中即可通过参照前端 MVC 框架中的规范化流程打通后端处理，提高系统中的整体运行效率。</p>
<p>近年来， Web 前端 MVC 框架的开发意义逐渐引起了人们的关注，而从 Web 前端 MVC 框架的适用范围研究中即可看出其在系统运行中占着至关重要的位置。对于此，可以从以下几个方面入手分析：</p>
<ul>
<li><p>从大量的实践中可以看出， Web 前端 MVC 框架不适用于页面型产品中，造成此现象的原因主要归咎于此类产品主要依附于服务器来运作自身系统，因而在此背景下， jQuery 等库会更好的满足其互动性需求，且最终导致 Web 前端 MVC 框架在页面型产品中无法发挥其自身效用；</p>
</li>
<li><p>在软件型产品，对于 Web 前端 MVC 框架的应用是非常必要的。首先由于软件型产品对数据操作能力的要求较大，因而若将 Web 前端 MVC 框架应用于软件型产品实际运行中，那么框架中的数据模型层会在一定程度上满足其数据操作需求，且会在系统实际运行中出现问题时，对数据展开及时的更新处理。其次，软件型产品中会涉及到大量的视图操作，但是由于 jQuery 等库无法完成高效率的操作行为，因而将 Web 前端 MVC 框架应用于其中，会在一定程度上更好的满足程序开发需求。</p>
</li>
</ul>
<p>参考：<br><a href="http://www.cnblogs.com/coco1s/p/4040108.html" target="_blank" rel="external">Web前端框架与类库的思考</a> | <a href="https://github.com/chokcoco" target="_blank" rel="external">@ChokCoco</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如今的 Web 前端领域什么最火？当然是前端框架啦。 React 听过吗？ Angular 听过吗？ Vue 听过么？如果都没有听过就不用往下看了。&lt;/p&gt;
    
    </summary>
    
      <category term="总结" scheme="http://yoursite.com/categories/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
      <category term="框架" scheme="http://yoursite.com/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>手把手教你在阿里云ECS上配置HTTPS</title>
    <link href="http://yoursite.com/2017/08/28/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%9C%A8%E9%98%BF%E9%87%8C%E4%BA%91ECS%E4%B8%8A%E9%85%8D%E7%BD%AEHTTPS/"/>
    <id>http://yoursite.com/2017/08/28/手把手教你在阿里云ECS上配置HTTPS/</id>
    <published>2017-08-28T03:46:08.000Z</published>
    <updated>2018-03-27T13:52:33.771Z</updated>
    
    <content type="html"><![CDATA[<p>上HTTPS的理由不用多说，直接上教程。</p>
<a id="more"></a>
<h3 id="1-申请SSL证书"><a href="#1-申请SSL证书" class="headerlink" title="1.申请SSL证书"></a>1.申请SSL证书</h3><p>免费申请阿里云SSL证书：<a href="https://common-buy.aliyun.com/?commodityCode=cas#/buy" target="_blank" rel="external">传送门</a></p>
<p>按照阿里云的提示操作填写相关的信息、配置好自己的域名等信息。附上截图教程：<a href="https://bbs.aliyun.com/read/298246.html" target="_blank" rel="external">传送门</a></p>
<h3 id="2-配置nginx"><a href="#2-配置nginx" class="headerlink" title="2.配置nginx"></a>2.配置nginx</h3><p>由初始的nginx我没有备份，这里就只附上最后配置完的代码吧：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#user  nobody;</span></div><div class="line">worker_processes  1;</div><div class="line"></div><div class="line"><span class="comment">#error_log  logs/error.log;</span></div><div class="line"><span class="comment">#error_log  logs/error.log  notice;</span></div><div class="line"><span class="comment">#error_log  logs/error.log  info;</span></div><div class="line"></div><div class="line"><span class="comment">#pid        logs/nginx.pid;</span></div><div class="line"></div><div class="line"></div><div class="line">events &#123;</div><div class="line">    worker_connections  1024;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">http &#123;</div><div class="line">    include       mime.types;</div><div class="line">    default_type  application/octet-stream;</div><div class="line"></div><div class="line">    <span class="comment">#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span></div><div class="line">    <span class="comment">#                  '$status $body_bytes_sent "$http_referer" '</span></div><div class="line">    <span class="comment">#                  '"$http_user_agent" "$http_x_forwarded_for"';</span></div><div class="line"></div><div class="line">    <span class="comment">#access_log  logs/access.log  main;</span></div><div class="line"></div><div class="line">    sendfile        on;</div><div class="line">    <span class="comment">#tcp_nopush     on;</span></div><div class="line"></div><div class="line">    <span class="comment">#keepalive_timeout  0;</span></div><div class="line">    keepalive_timeout  65;</div><div class="line"></div><div class="line">    <span class="comment">#gzip  on;</span></div><div class="line"></div><div class="line">    server &#123;</div><div class="line">        listen       80;</div><div class="line">	    server_name  xxx.com;</div><div class="line">	    add_header Strict-Transport-Security max-age=15768000;</div><div class="line">	    <span class="built_in">return</span> 301 https://ricosmall.cn<span class="variable">$request_uri</span>;</div><div class="line"></div><div class="line">        <span class="comment">#charset koi8-r;</span></div><div class="line"></div><div class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></div><div class="line"></div><div class="line">        <span class="comment">#location / &#123;</span></div><div class="line">        <span class="comment">#    root   html;</span></div><div class="line">        <span class="comment">#    index  index.html index.htm;</span></div><div class="line">        <span class="comment">#&#125;</span></div><div class="line"></div><div class="line">        <span class="comment">#error_page  404              /404.html;</span></div><div class="line"></div><div class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></div><div class="line">        <span class="comment">#</span></div><div class="line">        <span class="comment">#error_page   500 502 503 504  /50x.html;</span></div><div class="line">        <span class="comment">#location = /50x.html &#123;</span></div><div class="line">        <span class="comment">#    root   html;</span></div><div class="line">        <span class="comment">#&#125;</span></div><div class="line"></div><div class="line">        <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></div><div class="line">        <span class="comment">#</span></div><div class="line">        <span class="comment">#location ~ \.php$ &#123;</span></div><div class="line">        <span class="comment">#    proxy_pass   http://127.0.0.1;</span></div><div class="line">        <span class="comment">#&#125;</span></div><div class="line"></div><div class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></div><div class="line">        <span class="comment">#</span></div><div class="line">        <span class="comment">#location ~ \.php$ &#123;</span></div><div class="line">        <span class="comment">#    root           html;</span></div><div class="line">        <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></div><div class="line">        <span class="comment">#    fastcgi_index  index.php;</span></div><div class="line">        <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></div><div class="line">        <span class="comment">#    include        fastcgi_params;</span></div><div class="line">        <span class="comment">#&#125;</span></div><div class="line"></div><div class="line">        <span class="comment"># deny access to .htaccess files, if Apache's document root</span></div><div class="line">        <span class="comment"># concurs with nginx's one</span></div><div class="line">        <span class="comment">#</span></div><div class="line">        <span class="comment">#location ~ /\.ht &#123;</span></div><div class="line">        <span class="comment">#    deny  all;</span></div><div class="line">        <span class="comment">#&#125;</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment"># another virtual host using mix of IP-, name-, and port-based configuration</span></div><div class="line">    <span class="comment">#</span></div><div class="line">    <span class="comment">#server &#123;</span></div><div class="line">    <span class="comment">#    listen       8000;</span></div><div class="line">    <span class="comment">#    listen       somename:8080;</span></div><div class="line">    <span class="comment">#    server_name  somename  alias  another.alias;</span></div><div class="line"></div><div class="line">    <span class="comment">#    location / &#123;</span></div><div class="line">    <span class="comment">#        root   html;</span></div><div class="line">    <span class="comment">#        index  index.html index.htm;</span></div><div class="line">    <span class="comment">#    &#125;</span></div><div class="line">    <span class="comment">#&#125;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment"># HTTPS server</span></div><div class="line">    <span class="comment">#</span></div><div class="line">    server &#123;</div><div class="line">    	listen      443 ssl http2 default_server;</div><div class="line">    	server_name xxx.com; <span class="comment"># 你的域名</span></div><div class="line">    	add_header  Strict-Transport-Security max-age=15768000;</div><div class="line"></div><div class="line">    	ssl_certificate     path/to/xxx.pem; <span class="comment"># pem文件位置</span></div><div class="line">    	ssl_certificate_key path/to/xxx.key; <span class="comment"># 私钥位置</span></div><div class="line"></div><div class="line">    	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</div><div class="line"></div><div class="line">    	ssl_ciphers               <span class="string">'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4'</span>;</div><div class="line">    	ssl_prefer_server_ciphers on;</div><div class="line"></div><div class="line">        ssl_session_cache    shared:SSL:20m;</div><div class="line">        ssl_session_timeout  60m;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">            root   html;</div><div class="line">            index  index.html index.htm;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上HTTPS的理由不用多说，直接上教程。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="nginx" scheme="http://yoursite.com/tags/nginx/"/>
    
      <category term="HTTPS" scheme="http://yoursite.com/tags/HTTPS/"/>
    
      <category term="HTTP" scheme="http://yoursite.com/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>手把手教你在阿里云ECS上面安装nginx</title>
    <link href="http://yoursite.com/2017/08/27/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%9C%A8%E9%98%BF%E9%87%8C%E4%BA%91ECS%E4%B8%8A%E9%9D%A2%E5%AE%89%E8%A3%85nginx/"/>
    <id>http://yoursite.com/2017/08/27/手把手教你在阿里云ECS上面安装nginx/</id>
    <published>2017-08-27T08:48:09.000Z</published>
    <updated>2018-03-27T13:52:33.771Z</updated>
    
    <content type="html"><![CDATA[<p>一直想给自己弄一个云服务器和自己的域名，现在抓住了机会。阿里云有<a href="https://www.aliyun.com/activity#/" target="_blank" rel="external">免费和非常实惠的新手大礼包</a>。如果你也想体验一下，可以试试，我当时申请的就是<a href="https://free.aliyun.com/?type=personal" target="_blank" rel="external">这种</a>。</p>
<a id="more"></a>
<p>我选择的系统配置是Linux Ubuntu 14.04，如果你不是选的Linux，不用再往下看了。</p>
<h2 id="nginx配置步骤"><a href="#nginx配置步骤" class="headerlink" title="nginx配置步骤"></a>nginx配置步骤</h2><h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h3><ol>
<li><p>nginx源文件：<a href="http://nginx.org/en/download.html" target="_blank" rel="external">传送门</a></p>
</li>
<li><p>openssl源文件：<a href="https://www.openssl.org/source/" target="_blank" rel="external">传送门</a></p>
</li>
<li><p>pcre源文件：<a href="https://ftp.pcre.org/pub/pcre/" target="_blank" rel="external">传送门</a></p>
</li>
<li><p>zlib源文件：<a href="https://zlib.net/" target="_blank" rel="external">传送门</a></p>
</li>
</ol>
<h3 id="2-将下载的源文件放到ECS上去"><a href="#2-将下载的源文件放到ECS上去" class="headerlink" title="2.将下载的源文件放到ECS上去"></a>2.将下载的源文件放到ECS上去</h3><p>我是通过sftp的方式将文件放上去的</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># sftp模式登陆到服务器</span></div><div class="line">sftp name@ip</div><div class="line"></div><div class="line"><span class="comment"># cd到你想放置临时文件的目录</span></div><div class="line">sftp&gt; <span class="built_in">cd</span> /tmp</div><div class="line"></div><div class="line"><span class="comment"># cd到你本机下载文件的位置</span></div><div class="line">sftp&gt; lcd ~/Download</div><div class="line"></div><div class="line"><span class="comment"># 上传文件</span></div><div class="line">sftp&gt; put nginx.tar.gz openssl.tar.gz pcre.tar.gz zlib.tar.gz</div></pre></td></tr></table></figure>
<h3 id="3-登陆到服务器进行配置、安装、测试"><a href="#3-登陆到服务器进行配置、安装、测试" class="headerlink" title="3.登陆到服务器进行配置、安装、测试"></a>3.登陆到服务器进行配置、安装、测试</h3><p>我使用ssh的方式</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># ssh登陆服务器</span></div><div class="line">ssh name@ip</div><div class="line"></div><div class="line"><span class="comment"># cd到刚才上传文件的目录</span></div><div class="line"><span class="built_in">cd</span> /tmp</div><div class="line"></div><div class="line"><span class="comment"># 解压文件</span></div><div class="line">tar -xzf filename</div><div class="line"></div><div class="line"><span class="comment"># 进入nginx源码目录做小小的修改，为了安全</span></div><div class="line"><span class="built_in">cd</span> ./nginx/src/core</div><div class="line">vim nginx.h</div></pre></td></tr></table></figure>
<p>源文件内容如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment"> * Copyright (C) Igor Sysoev</span></div><div class="line"><span class="comment"> * Copyright (C) Nginx, Inc.</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _NGINX_H_INCLUDED_</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> _NGINX_H_INCLUDED_</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> nginx_version      1013004</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> NGINX_VERSION      <span class="meta-string">"1.13.4"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> NGINX_VER          <span class="meta-string">"nginx/"</span> NGINX_VERSION</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> NGX_BUILD</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> NGINX_VER_BUILD    NGINX_VER <span class="meta-string">" ("</span> NGX_BUILD <span class="meta-string">")"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> NGINX_VER_BUILD    NGINX_VER</span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> NGINX_VAR          <span class="meta-string">"NGINX"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> NGX_OLDPID_EXT     <span class="meta-string">".oldbin"</span></span></div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* _NGINX_H_INCLUDED_ */</span></span></div></pre></td></tr></table></figure></p>
<p>更改之后的文件内容如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment"> * Copyright (C) Igor Sysoev</span></div><div class="line"><span class="comment"> * Copyright (C) Nginx, Inc.</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _NGINX_H_INCLUDED_</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> _NGINX_H_INCLUDED_</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> nginx_version      1013004</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> NGINX_VERSION      <span class="meta-string">""</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> NGINX_VER          <span class="meta-string">"super"</span> NGINX_VERSION</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> NGX_BUILD</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> NGINX_VER_BUILD    NGINX_VER <span class="meta-string">" ("</span> NGX_BUILD <span class="meta-string">")"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> NGINX_VER_BUILD    NGINX_VER</span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> NGINX_VAR          <span class="meta-string">"super"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> NGX_OLDPID_EXT     <span class="meta-string">".oldbin"</span></span></div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* _NGINX_H_INCLUDED_ */</span></span></div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># cd到nginx目录，从core目录操作</span></div><div class="line"><span class="built_in">cd</span> ../../</div><div class="line"></div><div class="line"><span class="comment"># configure</span></div><div class="line">./configure  --prefix=/usr/<span class="built_in">local</span>/nginx --with-http_stub_status_module --with-http_ssl_module --with-openssl=/tmp/openssl --with-pcre=/tmp/pcre --with-zlib=/tmp/zlib</div><div class="line"></div><div class="line"><span class="comment"># /usr/local/nginx 指的是最终编译安装到此路径</span></div><div class="line"><span class="comment"># /tmp/openssl, /tmp/pcre, /tmp/zlib 对应解压源码文件夹位置</span></div><div class="line"></div><div class="line"><span class="comment"># install</span></div><div class="line">make install</div><div class="line"></div><div class="line"><span class="comment"># 安装完之后到安装目录下去</span></div><div class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx</div><div class="line"></div><div class="line"><span class="comment"># 检查一下是否安装配置成功</span></div><div class="line"><span class="built_in">cd</span> ./sbin</div><div class="line">./nginx -t</div><div class="line"></div><div class="line"><span class="comment"># 正常输出如下</span></div><div class="line">nginx: the configuration file /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf syntax is ok</div><div class="line">nginx: configuration file /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf <span class="built_in">test</span> is successful</div><div class="line"></div><div class="line"><span class="comment"># 如果看到如下结果，尝试重启一下</span></div><div class="line">The program <span class="string">'nginx'</span> can be found <span class="keyword">in</span> the following packages:</div><div class="line"> * nginx-core</div><div class="line"> * nginx-extras</div><div class="line"> * nginx-full</div><div class="line"> * nginx-light</div><div class="line"> * nginx-naxsi</div><div class="line">Try: apt-get install &lt;selected package&gt;</div></pre></td></tr></table></figure>
<p>至此，已经成功安装好了nginx。</p>
<p>有人会问为什么不通过<code>apt-get install nginx</code>之类的命令来安装，我想说的是，那种方式就无法体验最新版的nginx了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直想给自己弄一个云服务器和自己的域名，现在抓住了机会。阿里云有&lt;a href=&quot;https://www.aliyun.com/activity#/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;免费和非常实惠的新手大礼包&lt;/a&gt;。如果你也想体验一下，可以试试，我当时申请的就是&lt;a href=&quot;https://free.aliyun.com/?type=personal&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这种&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="nginx" scheme="http://yoursite.com/tags/nginx/"/>
    
      <category term="阿里云" scheme="http://yoursite.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="ECS" scheme="http://yoursite.com/tags/ECS/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript跨域方法总结</title>
    <link href="http://yoursite.com/2017/08/02/JavaScript%E8%B7%A8%E5%9F%9F%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2017/08/02/JavaScript跨域方法总结/</id>
    <published>2017-08-02T01:15:37.000Z</published>
    <updated>2018-03-27T13:52:33.771Z</updated>
    
    <content type="html"><![CDATA[<p>需要开发一个浏览器端检测的页面，碰到了跨域的问题。回过头来仔细研究一下跨域的问题，做个总结。</p>
<blockquote>
<p>本文大部分引用了<a href="http://www.cnblogs.com/rainman" target="_blank" rel="external">Rain Man</a>的<a href="http://www.cnblogs.com/rainman/archive/2011/02/20/1959325.html" target="_blank" rel="external">JavaScript跨域总结与解决办法</a></p>
</blockquote>
<a id="more"></a>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;需要开发一个浏览器端检测的页面，碰到了跨域的问题。回过头来仔细研究一下跨域的问题，做个总结。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文大部分引用了&lt;a href=&quot;http://www.cnblogs.com/rainman&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Rain Man&lt;/a&gt;的&lt;a href=&quot;http://www.cnblogs.com/rainman/archive/2011/02/20/1959325.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JavaScript跨域总结与解决办法&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="跨域" scheme="http://yoursite.com/tags/%E8%B7%A8%E5%9F%9F/"/>
    
      <category term="jsonp" scheme="http://yoursite.com/tags/jsonp/"/>
    
      <category term="CORS" scheme="http://yoursite.com/tags/CORS/"/>
    
  </entry>
  
  <entry>
    <title>CSS多行文本溢出省略显示</title>
    <link href="http://yoursite.com/2017/08/01/CSS%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%E7%9C%81%E7%95%A5%E6%98%BE%E7%A4%BA/"/>
    <id>http://yoursite.com/2017/08/01/CSS多行文本溢出省略显示/</id>
    <published>2017-08-01T09:26:02.000Z</published>
    <updated>2018-03-27T13:52:33.771Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文参考了<a href="http://lomu.me/" target="_blank" rel="external">Lomu</a>的文章<a href="http://lomu.me/post/css-multiline-text-overflow" target="_blank" rel="external">CSS多行文本溢出省略显示</a></p>
</blockquote>
<p>文本溢出我们经常用到的应该就是text-overflow:ellipsis了，相信大家也很熟悉，但是对于多行文本的溢出处理确接触的不是很多，最近在公司群里面有同事问到，并且自己也遇到过这个问题，所以专门研究过这个问题。</p>
<a id="more"></a>
<p>首先我们回顾一下以前实现单行缩略是可以通过下面的代码实现的（部分浏览器需要设置宽度）：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span> &#123;</div><div class="line">    <span class="attribute">overflow</span>: hidden;</div><div class="line">    <span class="attribute">text-overflow</span>: ellipsis;</div><div class="line">    <span class="attribute">white-space</span>: nowrap;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="WebKit内核浏览器解决办法"><a href="#WebKit内核浏览器解决办法" class="headerlink" title="WebKit内核浏览器解决办法"></a>WebKit内核浏览器解决办法</h2><p>首先，WebKit内核的浏览器实现起来比较简单，可以通过添加一个-webkit-line-clamp的私有属性来实现，-webkit-line-clamp是用来限制在一个块元素显示的文本的行数。 为了实现这个效果，它需要组合其他的WebKit属性：</p>
<ol>
<li>display: -webkit-box 将对象作为弹性伸缩盒子模型显示；</li>
<li>-webkit-box-orient 设置或检索伸缩盒对象的子元素的排列方式；</li>
<li>text-overflow: ellipsis 用省略号“…”隐藏超出范围的文本。</li>
</ol>
<p>具体代码参考如下：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span> &#123;</div><div class="line">    <span class="attribute">overflow </span>: hidden;</div><div class="line">    <span class="attribute">text-overflow</span>: ellipsis;</div><div class="line">    <span class="attribute">display</span>: -webkit-box;</div><div class="line">    <span class="attribute">-webkit-line-clamp</span>: <span class="number">2</span>;</div><div class="line">    <span class="attribute">-webkit-box-orient</span>: vertical;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这个方法合适WebKit浏览器或移动端（绝大部分是WebKit内核的）浏览器，效果可以查看：</p>
<iframe width="100%" height="300" src="//jsfiddle.net/ricosmall/hef3ht5a/embedded/result,css,html/dark/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>

<h2 id="其他浏览器的解决方案"><a href="#其他浏览器的解决方案" class="headerlink" title="其他浏览器的解决方案"></a>其他浏览器的解决方案</h2><p>目前没有什么CSS的属性可以直接控制多行文本的省略显示，比较靠谱的办法应该就是利用相对定位在最后面加上一个省略号了，代码可以参考下面：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span> &#123;</div><div class="line">    <span class="attribute">position</span>:relative;</div><div class="line">    <span class="attribute">line-height</span>:<span class="number">1.5em</span>;</div><div class="line">    <span class="comment">/* 高度为需要显示的行数*行高，比如这里我们显示两行，则为3 */</span></div><div class="line">    <span class="attribute">height</span>:<span class="number">3em</span>;</div><div class="line">    <span class="attribute">overflow</span>:hidden;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">    <span class="attribute">content</span>:<span class="string">"..."</span>;</div><div class="line">    <span class="attribute">position</span>:absolute;</div><div class="line">    <span class="attribute">bottom</span>:<span class="number">0</span>;</div><div class="line">    <span class="attribute">right</span>:<span class="number">0</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5px</span>;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<iframe width="100%" height="300" src="//jsfiddle.net/ricosmall/nsp4qoa4/embedded/result,css,html/dark/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>

<p>不过这样会有一点问题：</p>
<ol>
<li>需要知道显示的行数并设置行高才行；</li>
<li>IE6/7不支持after和content，需要添加一个标签来代替；</li>
<li>省略号的背景颜色跟文本背景颜色一样，并且可能会遮住部分文字，建议可以使用渐变的png背景图片代替。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文参考了&lt;a href=&quot;http://lomu.me/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lomu&lt;/a&gt;的文章&lt;a href=&quot;http://lomu.me/post/css-multiline-text-overflow&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS多行文本溢出省略显示&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;文本溢出我们经常用到的应该就是text-overflow:ellipsis了，相信大家也很熟悉，但是对于多行文本的溢出处理确接触的不是很多，最近在公司群里面有同事问到，并且自己也遇到过这个问题，所以专门研究过这个问题。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
      <category term="text-overflow" scheme="http://yoursite.com/tags/text-overflow/"/>
    
  </entry>
  
  <entry>
    <title>使用Travis实现hexo博客的自动化部署</title>
    <link href="http://yoursite.com/2017/08/01/%E4%BD%BF%E7%94%A8Travis%E5%AE%9E%E7%8E%B0hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
    <id>http://yoursite.com/2017/08/01/使用Travis实现hexo博客的自动化部署/</id>
    <published>2017-08-01T03:40:25.000Z</published>
    <updated>2018-03-27T13:52:33.771Z</updated>
    
    <content type="html"><![CDATA[<p>一直想写一篇文章，记录一下从搭建博客到实现用<a href="https://www.travis-ci.org" target="_blank" rel="external">Travis-CI</a>自动化部署博客的过程。憋到现在才写，拖了很久。</p>
<a id="more"></a>
<p>如何使用hexo搭建博客就不赘述了，请打开hexo的<a href="https://hexo.io" target="_blank" rel="external">官网</a>参考文档，很容易的。</p>
<h2 id="第一次小跨越：实现博客同时部署到Coding和Github"><a href="#第一次小跨越：实现博客同时部署到Coding和Github" class="headerlink" title="第一次小跨越：实现博客同时部署到Coding和Github"></a>第一次小跨越：实现博客同时部署到<a href="https://coding.net" target="_blank" rel="external">Coding</a>和<a href="https://github.com" target="_blank" rel="external">Github</a></h2><p>由于github在国内访问速度比较慢，比较合适的做法是：把博客静态资源在GitHub上面部署一份，同时在Coding(和GitHub原理一模一样)上也部署一份。如果没有自己的域名，这个时候就可以通过<code>yourusername.github.io</code>或者<code>yourusername.coding.me</code>访问到相同的博客页面。</p>
<h3 id="原始方法"><a href="#原始方法" class="headerlink" title="原始方法"></a>原始方法</h3><p>一开始，我没有多想，按照原始的方法部署博客。过程就像下面这样：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 1. 新建一篇文章</span></div><div class="line">hexo new post <span class="string">'文章标题'</span></div><div class="line"></div><div class="line"><span class="comment"># 2. 编写文章内容</span></div><div class="line">vim 文章标题.md</div><div class="line"></div><div class="line"><span class="comment"># 3. 生成静态博客代码</span></div><div class="line">hexo generate</div><div class="line"></div><div class="line"><span class="comment"># 4. 部署博客代码到Github</span></div><div class="line">hexo deploy</div><div class="line"></div><div class="line"><span class="comment"># 5. 复制生成的博客代码到另一个Coding项目</span></div><div class="line">cp -r public ../blog-in-coding</div><div class="line"></div><div class="line"><span class="comment"># 6. 部署博客代码到Coding</span></div><div class="line">git add .</div><div class="line">git commit -m <span class="string">'create a new post'</span></div><div class="line">git push origin master</div></pre></td></tr></table></figure>
<p>每次这样显得特别原始，特别麻烦。一个程序员习惯这种机械的流程是没有好下场的。问题总结下来其实就是：是否可以同时将一份博客代码同时部署到两个远程仓库？这个问题我之前专门写了一篇文章做了介绍。<a href="/2017/03/03/将代码同时push到两个不同的远程仓库/">传送门</a></p>
<p>这个问题得以解决，新的博客部署流程就变成了这样：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 1. 新建一篇文章</span></div><div class="line">hexo new post <span class="string">'文章标题'</span></div><div class="line"></div><div class="line"><span class="comment"># 2. 编写文章内容</span></div><div class="line">vim 文章标题.md</div><div class="line"></div><div class="line"><span class="comment"># 3. 生成静态博客代码</span></div><div class="line">hexo generate</div><div class="line"></div><div class="line"><span class="comment"># 4. 部署博客代码到GitHub和Coding</span></div><div class="line">hexo deploy</div></pre></td></tr></table></figure>
<p>已经省去了两个大的步骤。更进一步的做法就是把上面的3和4结合成一个命令：<code>hexo deploy --generate</code>。至此，基本上已经优化到一个不错的水平了。</p>
<h2 id="第二次大跨越：使用Travis-CI实现Hexo博客的自动化部署"><a href="#第二次大跨越：使用Travis-CI实现Hexo博客的自动化部署" class="headerlink" title="第二次大跨越：使用Travis-CI实现Hexo博客的自动化部署"></a>第二次大跨越：使用<a href="https://www.travis-ci.org" target="_blank" rel="external">Travis-CI</a>实现<a href="https://hexo.io" target="_blank" rel="external">Hexo</a>博客的自动化部署</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直想写一篇文章，记录一下从搭建博客到实现用&lt;a href=&quot;https://www.travis-ci.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Travis-CI&lt;/a&gt;自动化部署博客的过程。憋到现在才写，拖了很久。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="Travis-CI" scheme="http://yoursite.com/tags/Travis-CI/"/>
    
  </entry>
  
  <entry>
    <title>可视化算法</title>
    <link href="http://yoursite.com/2017/07/20/%E5%8F%AF%E8%A7%86%E5%8C%96%E7%AE%97%E6%B3%95/"/>
    <id>http://yoursite.com/2017/07/20/可视化算法/</id>
    <published>2017-07-20T00:59:30.000Z</published>
    <updated>2018-03-27T13:52:33.770Z</updated>
    
    <content type="html"><![CDATA[<p>一篇赏心悦目的可视化算法文章。</p>
<p><strong><a href="https://bost.ocks.org/mike/algorithms/" target="_blank" rel="external">Visualizing Algorithms</a></strong></p>
<p>附上大牛的博客：<strong><a href="https://bost.ocks.org/mike/" target="_blank" rel="external">Mike Bostock</a></strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一篇赏心悦目的可视化算法文章。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://bost.ocks.org/mike/algorithms/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Visualizing Algorithms&lt;/a&gt;
    
    </summary>
    
      <category term="转载" scheme="http://yoursite.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
      <category term="可视化算法" scheme="http://yoursite.com/tags/%E5%8F%AF%E8%A7%86%E5%8C%96%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript模块简史</title>
    <link href="http://yoursite.com/2017/07/04/JavaScript%E6%A8%A1%E5%9D%97%E7%AE%80%E5%8F%B2/"/>
    <id>http://yoursite.com/2017/07/04/JavaScript模块简史/</id>
    <published>2017-07-04T02:40:22.000Z</published>
    <updated>2018-03-27T13:52:33.770Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>你是否是 JavaScript 新手？并且对模块，模块加载器和模块打包器感到困惑吗？或者你已经编写了一段时间的 JavaScript ，但是没法掌握模块的一些术语？你是否听过 CommonJS、AMD、Browserify、SystemJS、Webpack、JSPM 等等术语，但是不理解我们为什么需要它们？</p>
<p>我会试着解释他们是什么，他们试图解决什么问题，以及他们如何解决这个问题。</p>
</blockquote>
<a id="more"></a>
<h2 id="中文翻译地址"><a href="#中文翻译地址" class="headerlink" title="中文翻译地址"></a>中文翻译地址</h2><p><strong><a href="http://www.css88.com/archives/7628" target="_blank" rel="external">JavaScript模块简史</a></strong></p>
<h2 id="英文原版地址"><a href="#英文原版地址" class="headerlink" title="英文原版地址"></a>英文原版地址</h2><p><strong><a href="https://medium.com/@sungyeol.choi/javascript-module-module-loader-module-bundler-es6-module-confused-yet-6343510e7bde" target="_blank" rel="external">Brief history of JavaScript Modules</a></strong></p>
<p>英文地址需要自备梯子。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;你是否是 JavaScript 新手？并且对模块，模块加载器和模块打包器感到困惑吗？或者你已经编写了一段时间的 JavaScript ，但是没法掌握模块的一些术语？你是否听过 CommonJS、AMD、Browserify、SystemJS、Webpack、JSPM 等等术语，但是不理解我们为什么需要它们？&lt;/p&gt;
&lt;p&gt;我会试着解释他们是什么，他们试图解决什么问题，以及他们如何解决这个问题。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="转载" scheme="http://yoursite.com/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="模块化" scheme="http://yoursite.com/tags/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript标准编码风格</title>
    <link href="http://yoursite.com/2017/07/04/JavaScript%E6%A0%87%E5%87%86%E7%BC%96%E7%A0%81%E9%A3%8E%E6%A0%BC/"/>
    <id>http://yoursite.com/2017/07/04/JavaScript标准编码风格/</id>
    <published>2017-07-04T02:24:03.000Z</published>
    <updated>2018-03-27T13:52:33.770Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>JavaScript 代码规范，自带 linter &amp; 代码自动修正</p>
<ul>
<li><strong>无须配置。</strong> 史上最便捷的统一代码风格的方式，轻松拥有。</li>
<li><strong>自动代码格式化。</strong> 只需运行 standard –fix 从此和脏乱差的代码说再见。</li>
<li><strong>提前发现风格及程序问题。</strong> 减少代码审查过程中反反复复的修改过程，节约时间。</li>
</ul>
</blockquote>
<a id="more"></a>
<p><strong><a href="https://standardjs.com/readme-zhcn.html" target="_blank" rel="external">JavaScript标准风格（首页）</a></strong></p>
<p><strong><a href="https://standardjs.com/rules-zhcn.html#javascript-standard-style" target="_blank" rel="external">JavaScript Standard Style（全文）</a></strong></p>
<p>下面是ExpressJS项目中遵循该风格的示例代码：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*!</span></div><div class="line"><span class="comment"> * body-parser</span></div><div class="line"><span class="comment"> * Copyright(c) 2014-2015 Douglas Christopher Wilson</span></div><div class="line"><span class="comment"> * MIT Licensed</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="meta">'use strict'</span></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Module dependencies.</span></div><div class="line"><span class="comment"> * @private</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> deprecate = <span class="built_in">require</span>(<span class="string">'depd'</span>)(<span class="string">'body-parser'</span>)</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Cache of loaded parsers.</span></div><div class="line"><span class="comment"> * @private</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> parsers = <span class="built_in">Object</span>.create(<span class="literal">null</span>)</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * @typedef Parsers</span></div><div class="line"><span class="comment"> * @type &#123;function&#125;</span></div><div class="line"><span class="comment"> * @property &#123;function&#125; json</span></div><div class="line"><span class="comment"> * @property &#123;function&#125; raw</span></div><div class="line"><span class="comment"> * @property &#123;function&#125; text</span></div><div class="line"><span class="comment"> * @property &#123;function&#125; urlencoded</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Module exports.</span></div><div class="line"><span class="comment"> * @type &#123;Parsers&#125;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line">exports = <span class="built_in">module</span>.exports = deprecate.function(bodyParser,</div><div class="line">  <span class="string">'bodyParser: use individual json/urlencoded middlewares'</span>)</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * JSON parser.</span></div><div class="line"><span class="comment"> * @public</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="built_in">Object</span>.defineProperty(exports, <span class="string">'json'</span>, &#123;</div><div class="line">  configurable: <span class="literal">true</span>,</div><div class="line">  enumerable: <span class="literal">true</span>,</div><div class="line">  get: createParserGetter(<span class="string">'json'</span>)</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Raw parser.</span></div><div class="line"><span class="comment"> * @public</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="built_in">Object</span>.defineProperty(exports, <span class="string">'raw'</span>, &#123;</div><div class="line">  configurable: <span class="literal">true</span>,</div><div class="line">  enumerable: <span class="literal">true</span>,</div><div class="line">  get: createParserGetter(<span class="string">'raw'</span>)</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Text parser.</span></div><div class="line"><span class="comment"> * @public</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="built_in">Object</span>.defineProperty(exports, <span class="string">'text'</span>, &#123;</div><div class="line">  configurable: <span class="literal">true</span>,</div><div class="line">  enumerable: <span class="literal">true</span>,</div><div class="line">  get: createParserGetter(<span class="string">'text'</span>)</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * URL-encoded parser.</span></div><div class="line"><span class="comment"> * @public</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="built_in">Object</span>.defineProperty(exports, <span class="string">'urlencoded'</span>, &#123;</div><div class="line">  configurable: <span class="literal">true</span>,</div><div class="line">  enumerable: <span class="literal">true</span>,</div><div class="line">  get: createParserGetter(<span class="string">'urlencoded'</span>)</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Create a middleware to parse json and urlencoded bodies.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * @param &#123;object&#125; [options]</span></div><div class="line"><span class="comment"> * @return &#123;function&#125;</span></div><div class="line"><span class="comment"> * @deprecated</span></div><div class="line"><span class="comment"> * @public</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">bodyParser</span> (<span class="params">options</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> opts = &#123;&#125;</div><div class="line"></div><div class="line">  <span class="comment">// exclude type option</span></div><div class="line">  <span class="keyword">if</span> (options) &#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> prop <span class="keyword">in</span> options) &#123;</div><div class="line">      <span class="keyword">if</span> (prop !== <span class="string">'type'</span>) &#123;</div><div class="line">        opts[prop] = options[prop]</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">var</span> _urlencoded = exports.urlencoded(opts)</div><div class="line">  <span class="keyword">var</span> _json = exports.json(opts)</div><div class="line"></div><div class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">bodyParser</span> (<span class="params">req, res, next</span>) </span>&#123;</div><div class="line">    _json(req, res, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</div><div class="line">      <span class="keyword">if</span> (err) <span class="keyword">return</span> next(err)</div><div class="line">      _urlencoded(req, res, next)</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Create a getter for loading a parser.</span></div><div class="line"><span class="comment"> * @private</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">createParserGetter</span> (<span class="params">name</span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> loadParser(name)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Load a parser module.</span></div><div class="line"><span class="comment"> * @private</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadParser</span> (<span class="params">parserName</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> parser = parsers[parserName]</div><div class="line"></div><div class="line">  <span class="keyword">if</span> (parser !== <span class="literal">undefined</span>) &#123;</div><div class="line">    <span class="keyword">return</span> parser</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">// this uses a switch for static require analysis</span></div><div class="line">  <span class="keyword">switch</span> (parserName) &#123;</div><div class="line">    <span class="keyword">case</span> <span class="string">'json'</span>:</div><div class="line">      parser = <span class="built_in">require</span>(<span class="string">'./lib/types/json'</span>)</div><div class="line">      <span class="keyword">break</span></div><div class="line">    <span class="keyword">case</span> <span class="string">'raw'</span>:</div><div class="line">      parser = <span class="built_in">require</span>(<span class="string">'./lib/types/raw'</span>)</div><div class="line">      <span class="keyword">break</span></div><div class="line">    <span class="keyword">case</span> <span class="string">'text'</span>:</div><div class="line">      parser = <span class="built_in">require</span>(<span class="string">'./lib/types/text'</span>)</div><div class="line">      <span class="keyword">break</span></div><div class="line">    <span class="keyword">case</span> <span class="string">'urlencoded'</span>:</div><div class="line">      parser = <span class="built_in">require</span>(<span class="string">'./lib/types/urlencoded'</span>)</div><div class="line">      <span class="keyword">break</span></div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">// store to prevent invoking require()</span></div><div class="line">  <span class="keyword">return</span> (parsers[parserName] = parser)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;JavaScript 代码规范，自带 linter &amp;amp; 代码自动修正&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;无须配置。&lt;/strong&gt; 史上最便捷的统一代码风格的方式，轻松拥有。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自动代码格式化。&lt;/strong&gt; 只需运行 standard –fix 从此和脏乱差的代码说再见。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提前发现风格及程序问题。&lt;/strong&gt; 减少代码审查过程中反反复复的修改过程，节约时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="规范" scheme="http://yoursite.com/categories/%E8%A7%84%E8%8C%83/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="编码风格" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A0%81%E9%A3%8E%E6%A0%BC/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript设计模式（一）</title>
    <link href="http://yoursite.com/2017/06/13/JavaScript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2017/06/13/JavaScript设计模式（一）/</id>
    <published>2017-06-13T00:58:29.000Z</published>
    <updated>2018-03-27T13:52:33.770Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建对象的基本模式"><a href="#创建对象的基本模式" class="headerlink" title="创建对象的基本模式"></a>创建对象的基本模式</h2><p>JavaScript中创建对象的基本模式有3种。第一种是门户大开型，它只能提供公用成员；第二种是使用下划线来表示方法或属性的私用性；第三种做法使用闭包来创建真正私用的成员，这些成员只能通过一些特权方法来访问。</p>
<p>不能简单地说这些定义类的模式中哪种是‘正确的’。它们各有利弊。</p>
<a id="more"></a>
<h3 id="门户大开型对象"><a href="#门户大开型对象" class="headerlink" title="门户大开型对象"></a>门户大开型对象</h3><p>创建一个类，用一个函数来做其构造器。我们称其为门户大开型对象，因为它的所有属性和方法都是公开的、可访问的。这些公用属性要使用this关键字来创建：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Book = <span class="function"><span class="keyword">function</span> (<span class="params">isbn, title, author</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (isbn == <span class="literal">undefined</span>) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Book constructor requires an isbn.'</span>);</div><div class="line"></div><div class="line">    <span class="keyword">this</span>.isbn = isbn;</div><div class="line">    <span class="keyword">this</span>.title = title || <span class="string">'No title specified'</span>;</div><div class="line">    <span class="keyword">this</span>.author = author || <span class="string">'No author specified'</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">Book.prototype.display = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    ...</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>乍一看这个类似乎符合一切需求。但是最大的问题是你无法检验ISBN数据的完整性，而不完整的ISBN数据有可能导致display方法失灵。这破坏了你与其他程序员之间的契约。如果Book对象在创建的时候没有抛出任何错误，那么display方法应该能够正常工作才是，但是由于没有进行完整性检查，这就不一定了。因此需要强化一下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Book = <span class="function"><span class="keyword">function</span> (<span class="params">isbn, title, author</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (!<span class="keyword">this</span>.checkIsbn(isbn) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Book: Invalid ISBN.'</span>));</div><div class="line"></div><div class="line">    <span class="keyword">this</span>.isbn = isbn;</div><div class="line">    <span class="keyword">this</span>.title = title || <span class="string">'No title specified'</span>;</div><div class="line">    <span class="keyword">this</span>.author = author || <span class="string">'No author specified'</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">Book.prototype = &#123;</div><div class="line">    checkIsbn: <span class="function"><span class="keyword">function</span> (<span class="params">isbn</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (isbn == <span class="literal">undefined</span> || <span class="keyword">typeof</span> isbn != <span class="string">'string'</span>) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    isbn = isbn.replace(<span class="regexp">/-/</span>, <span class="string">''</span>);</div><div class="line">    <span class="keyword">if</span> (isbn.length != <span class="number">10</span> &amp;&amp; isbn.length != <span class="number">13</span>) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> sum = <span class="number">0</span>;</div><div class="line">    <span class="keyword">if</span> (isbn.length === <span class="number">10</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (!isbn.match(<span class="regexp">/^\d&#123;9&#125;/</span>)) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</div><div class="line">            sum += isbn.charAt(i) * (<span class="number">10</span> - i);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">var</span> checksum = sum % <span class="number">11</span>;</div><div class="line">        <span class="keyword">if</span> (checksum === <span class="number">10</span>) checksum = <span class="string">'X'</span>;</div><div class="line">        <span class="keyword">if</span> (isbn.charAt(<span class="number">9</span>) != checksum) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">if</span> (!isbn.match(<span class="regexp">/^\d&#123;12&#125;/</span>)) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++) &#123;</div><div class="line">            sum += isbn.charAt(i) * ((i % <span class="number">2</span> === <span class="number">0</span>) ? <span class="number">1</span> : <span class="number">3</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">var</span> checksum = sum % <span class="number">10</span>;</div><div class="line">        <span class="keyword">if</span> (isbn.charAt(<span class="number">12</span>) != checksum) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    display: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        ...</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>现在看起来情况有所改善。在创建对象的时候可以对ISBN的有效性进行检查，这可以确保display方法能正常工作。但是现在又出现另一个问题。假设另一个程序员认识到一本书可能会有很多个版本，每个版本都有自己的ISBN。他设计了一个用来在这些不同版本之中进行选择的算法，并在实例化书籍对象之后直接用它修改isbn属性：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">theHobbit.isbn = <span class="string">'978-0261103283'</span>;</div><div class="line">theHobbit.display();</div></pre></td></tr></table></figure>
<p>即使能在构造器中对数据的完整性进行检验，你对其他程序员会把什么样的值直接赋给isbn属性还是毫无控制。为了保护内部数据，你为每个属性都提供了取值器和赋值器方法。取值器方法用于获取属性值，而赋值器方法则用于设置属性值。通过使用赋值器，你可以把一个新值真正赋给属性之前进行各种检验。下面是加了取值器和赋值器方法之后的新版Book对象：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Interface类的源码见文章末尾</span></div><div class="line"><span class="keyword">var</span> Publication = <span class="keyword">new</span> Interface(<span class="string">'Publication'</span>, [<span class="string">'getIsbn'</span>, <span class="string">'setIsbn'</span>, <span class="string">'getTitle'</span>, <span class="string">'setTitle'</span>, <span class="string">'getAuthor'</span>, <span class="string">'setAuthor'</span>, <span class="string">'display'</span>]);</div><div class="line"></div><div class="line"><span class="keyword">var</span> Book = <span class="function"><span class="keyword">function</span> (<span class="params">isbn, title, author</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.setIsbn(isbn);</div><div class="line">    <span class="keyword">this</span>.setTitle(title);</div><div class="line">    <span class="keyword">this</span>.setAuthor(author);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">Book.prototype = &#123;</div><div class="line">    checkIsbn: <span class="function"><span class="keyword">function</span> (<span class="params">isbn</span>) </span>&#123;</div><div class="line">        ...</div><div class="line">    &#125;,</div><div class="line">    getIsbn: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.isbn;</div><div class="line">    &#125;,</div><div class="line">    setIsbn: <span class="function"><span class="keyword">function</span> (<span class="params">isbn</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (!<span class="keyword">this</span>.checkIsbn(isbn)) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Book: Invalid ISBN.'</span>);</div><div class="line">        <span class="keyword">this</span>.isbn = isbn;</div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    getTitle: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.title;</div><div class="line">    &#125;,</div><div class="line">    setTitle: <span class="function"><span class="keyword">function</span> (<span class="params">title</span>) </span>&#123;</div><div class="line">        <span class="keyword">this</span>.title = title || <span class="string">'No title specified'</span>;</div><div class="line">    &#125;,</div><div class="line">    getAuthor: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.author;</div><div class="line">    &#125;,</div><div class="line">    setAuthor: <span class="function"><span class="keyword">function</span> (<span class="params">author</span>) </span>&#123;</div><div class="line">        <span class="keyword">this</span>.author = author || <span class="string">'No author specified'</span>;</div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    display: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        ...</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>虽然我们为设置属性提供了赋值器方法，但是那些属性仍然是公开的，可以被设置。</p>
<h3 id="用命名规范区别私用成员"><a href="#用命名规范区别私用成员" class="headerlink" title="用命名规范区别私用成员"></a>用命名规范区别私用成员</h3><p>下划线是一个众所周知的命名规范，它表明一个属性（或方法）仅提供对象内部使用，直接访问它或者设置它可能会导致意想不到的后果。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Book = <span class="function"><span class="keyword">function</span> (<span class="params">isbn, title, author</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.setIsbn(isbn);</div><div class="line">    <span class="keyword">this</span>.setTitle(title);</div><div class="line">    <span class="keyword">this</span>.setAuthor(author);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">Book.prototype = &#123;</div><div class="line">    _checkIsbn: <span class="function"><span class="keyword">function</span> (<span class="params">isbn</span>) </span>&#123;</div><div class="line">        ...</div><div class="line">    &#125;,</div><div class="line">    getIsbn: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._isbn;</div><div class="line">    &#125;,</div><div class="line">    setIsbn: <span class="function"><span class="keyword">function</span> (<span class="params">isbn</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (!<span class="keyword">this</span>._checkIsbn(isbn)) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Book: Invalid ISBN.'</span>);</div><div class="line">        <span class="keyword">this</span>._isbn = isbn;</div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    getTitle: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._title;</div><div class="line">    &#125;,</div><div class="line">    setTitle: <span class="function"><span class="keyword">function</span> (<span class="params">title</span>) </span>&#123;</div><div class="line">        <span class="keyword">this</span>._title = title || <span class="string">'No title specified'</span>;</div><div class="line">    &#125;,</div><div class="line">    getAuthor: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._author;</div><div class="line">    &#125;,</div><div class="line">    setAuthor: <span class="function"><span class="keyword">function</span> (<span class="params">author</span>) </span>&#123;</div><div class="line">        <span class="keyword">this</span>._author = author || <span class="string">'No author specified'</span>;</div><div class="line">    &#125;,</div><div class="line"></div><div class="line">    display: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        ...</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>这有助于程序员对它的无意使用，但是不能防止对它的有意使用。</p>
<h3 id="用闭包实现私用成员"><a href="#用闭包实现私用成员" class="headerlink" title="用闭包实现私用成员"></a>用闭包实现私用成员</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Book = <span class="function"><span class="keyword">function</span> (<span class="params">newIsbn, newTitle, newAuthor</span>) </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> isbn, title, author;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkIsbn</span>(<span class="params">isbn</span>) </span>&#123;</div><div class="line">        ...</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">this</span>.getIsbn = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> isbn;</div><div class="line">    &#125;;</div><div class="line">    <span class="keyword">this</span>.setIsbn = <span class="function"><span class="keyword">function</span> (<span class="params">newIsbn</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (!checkIsbn(newIsbn)) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Book: Invalid ISBN.'</span>);</div><div class="line">        isbn = newIsbn;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="keyword">this</span>.getTitle = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> title;</div><div class="line">    &#125;;</div><div class="line">    <span class="keyword">this</span>.setTitle = <span class="function"><span class="keyword">function</span> (<span class="params">newTitle</span>) </span>&#123;</div><div class="line">        title = newTitle || <span class="string">'No title specified'</span>;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="keyword">this</span>.getAuthor = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> author;</div><div class="line">    &#125;;</div><div class="line">    <span class="keyword">this</span>.setAuthor = <span class="function"><span class="keyword">function</span> (<span class="params">newAuthor</span>) </span>&#123;</div><div class="line">        author = newAuthor || <span class="string">'No author specified'</span>;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="keyword">this</span>.setIsbn(newIsbn);</div><div class="line">    <span class="keyword">this</span>.setTitle(newTitle);</div><div class="line">    <span class="keyword">this</span>.setAuthor(newAuthor);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">Book.prototype = &#123;</div><div class="line">    display: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        ...</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>Interface类的源码如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Interface = <span class="function"><span class="keyword">function</span> (<span class="params">name, methods</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (<span class="built_in">arguments</span>.length != <span class="number">2</span>) &#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Interface constructor called with '</span> + <span class="built_in">arguments</span>.length</div><div class="line">        + <span class="string">'arguments, but expected exactly 2.'</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">    <span class="keyword">this</span>.methods = [];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = methods.length; i &lt; len; i++) &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> methods[i] !== <span class="string">'string'</span>) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Interface constructor expects method names to be '</span></div><div class="line">            + <span class="string">'passed in as a string.'</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">this</span>.methods.push(methods[i]);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">Interface.ensureImplements = <span class="function"><span class="keyword">function</span> (<span class="params">object</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (<span class="built_in">arguments</span>.length &lt; <span class="number">2</span>) &#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Function Interface.ensureImplements called with '</span></div><div class="line">        + <span class="built_in">arguments</span>.length + <span class="string">'arguments, but expected at least 2.'</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>, len = <span class="built_in">arguments</span>.length; i &lt; len; i++) &#123;</div><div class="line">        <span class="keyword">var</span> interface = <span class="built_in">arguments</span>[i];</div><div class="line">        <span class="keyword">if</span> (interface.constructor !== Interface) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Function Interface.ensureImplements expects '</span></div><div class="line">            + <span class="string">'arguments two and above to be instances of Interface.'</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>, methodsLen = interface.methods.length; j &lt; methodsLen; j++) &#123;</div><div class="line">            <span class="keyword">var</span> method =  interface.methods[j];</div><div class="line">            <span class="keyword">if</span> (!object[method] || <span class="keyword">typeof</span> object[method] !== <span class="string">'function'</span>) &#123;</div><div class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Function Interface.ensureImplements: object '</span></div><div class="line">                + <span class="string">'does not implement the '</span> + interface.name</div><div class="line">                + <span class="string">'interface. Method '</span> + method + <span class="string">'was not found.'</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;创建对象的基本模式&quot;&gt;&lt;a href=&quot;#创建对象的基本模式&quot; class=&quot;headerlink&quot; title=&quot;创建对象的基本模式&quot;&gt;&lt;/a&gt;创建对象的基本模式&lt;/h2&gt;&lt;p&gt;JavaScript中创建对象的基本模式有3种。第一种是门户大开型，它只能提供公用成员；第二种是使用下划线来表示方法或属性的私用性；第三种做法使用闭包来创建真正私用的成员，这些成员只能通过一些特权方法来访问。&lt;/p&gt;
&lt;p&gt;不能简单地说这些定义类的模式中哪种是‘正确的’。它们各有利弊。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="设计模式" scheme="http://yoursite.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript开发规范</title>
    <link href="http://yoursite.com/2017/06/02/JavaScript%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/"/>
    <id>http://yoursite.com/2017/06/02/JavaScript开发规范/</id>
    <published>2017-06-02T14:41:28.000Z</published>
    <updated>2018-03-27T13:52:33.770Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-命名规范"><a href="#1-命名规范" class="headerlink" title="1. 命名规范"></a>1. 命名规范</h2><h3 id="驼峰式命名法："><a href="#驼峰式命名法：" class="headerlink" title="驼峰式命名法："></a>驼峰式命名法：</h3><p>驼峰式命名法由大（小）写字母开始，后续每个单词首字母都大写。<br>按照第一个字母是否大写，分为：</p>
<ul>
<li>Pascal Case 大驼峰式命名法：首字母大写。如：StudentInfo</li>
<li>Camel Case 小驼峰式命名法：首字母小写。如：studentInfo</li>
</ul>
<a id="more"></a>
<h3 id="1-1-变量"><a href="#1-1-变量" class="headerlink" title="1.1 变量"></a>1.1 变量</h3><p>命名方法： 小驼峰式命名法<br>命名规范： 前缀应当是名词。（函数的名字前缀为动词，以此区分变量和函数）<br>命名建议：尽量在变量名字中体现所属类型，如：length、count等表示数字类型；而包含name、title表示为字符串类型。</p>
<p>示例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// good</span></div><div class="line"><span class="keyword">var</span> maxCount = <span class="number">10</span>;</div><div class="line"><span class="keyword">var</span> tableTitle = <span class="string">'LoginTable'</span>;</div><div class="line"></div><div class="line"><span class="comment">// bad</span></div><div class="line"><span class="keyword">var</span> setCount = <span class="number">10</span>;</div><div class="line"><span class="keyword">var</span> getTitle = <span class="string">'LoginTable'</span>;</div></pre></td></tr></table></figure>
<h3 id="1-2-函数"><a href="#1-2-函数" class="headerlink" title="1.2 函数"></a>1.2 函数</h3><p>命名方法：小驼峰式命名法<br>命名规范：前缀应当为动词<br>命名建议：可以使用常见动词约定</p>
<table>
<thead>
<tr>
<th style="text-align:left">动词</th>
<th style="text-align:left">含义</th>
<th style="text-align:left">返回值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">can</td>
<td style="text-align:left">判断是否可执行某个动作（权限）</td>
<td style="text-align:left">Boolean</td>
</tr>
<tr>
<td style="text-align:left">has</td>
<td style="text-align:left">判断是否含有某个值</td>
<td style="text-align:left">Boolean</td>
</tr>
<tr>
<td style="text-align:left">is</td>
<td style="text-align:left">判断是否为某个值</td>
<td style="text-align:left">Boolean</td>
</tr>
<tr>
<td style="text-align:left">get</td>
<td style="text-align:left">获取某个值</td>
<td style="text-align:left">NOT Boolean</td>
</tr>
<tr>
<td style="text-align:left">set</td>
<td style="text-align:left">设置某个值</td>
<td style="text-align:left">无返回值、Boolean或者返回链式对象</td>
</tr>
<tr>
<td style="text-align:left">load</td>
<td style="text-align:left">加载某些数据</td>
<td style="text-align:left">无返回值或加载状态</td>
</tr>
</tbody>
</table>
<p>示例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 判断是否可读</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">canRead</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 获取名字</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getName</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.name;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="1-3-常量"><a href="#1-3-常量" class="headerlink" title="1.3 常量"></a>1.3 常量</h3><p>命名方法：名称全部大写<br>命名规范：使用大写字母和下划线组合命名，下划线用以分割单词<br>命名建议：参照1.1</p>
<p>示例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> MAX_COUNT = <span class="number">10</span>;</div><div class="line"><span class="keyword">var</span> URL = <span class="string">'http://www.lrts.me'</span>;</div></pre></td></tr></table></figure>
<h3 id="1-4-构造函数"><a href="#1-4-构造函数" class="headerlink" title="1.4 构造函数"></a>1.4 构造函数</h3><p>命名方法：大驼峰式命名法<br>命名规范：前缀为名称<br>命名建议：无</p>
<p>示例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params">name</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> student1 = <span class="keyword">new</span> Student(<span class="string">'Tom'</span>);</div></pre></td></tr></table></figure>
<h3 id="1-5-类的成员"><a href="#1-5-类的成员" class="headerlink" title="1.5 类的成员"></a>1.5 类的成员</h3><p>命名建议：</p>
<ul>
<li>公共属性和方法：跟变量和函数的命名一样</li>
<li>私有属性和方法：前缀为_（下划线），后面跟公共属性和方法一样的命名方式</li>
</ul>
<p>示例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params">name</span>) </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">// 私有属性</span></div><div class="line">    <span class="keyword">var</span> _name = name;</div><div class="line"></div><div class="line">    <span class="comment">// 公共方法</span></div><div class="line">    <span class="keyword">this</span>.getName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> _name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">this</span>.setName = <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</div><div class="line">        _name = value;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> student1 = <span class="keyword">new</span> Student(<span class="string">'Tom'</span>);</div><div class="line">student1.setName(<span class="string">'John'</span>);</div><div class="line"><span class="built_in">console</span>.log(student1.getName()); <span class="comment">// =&gt; John</span></div></pre></td></tr></table></figure>
<h2 id="2-注释规范"><a href="#2-注释规范" class="headerlink" title="2. 注释规范"></a>2. 注释规范</h2><p>JavaScript支持两种不同类型的注释：单行注释和多行注释。</p>
<h3 id="2-1-单行注释"><a href="#2-1-单行注释" class="headerlink" title="2.1 单行注释"></a>2.1 单行注释</h3><p>说明：单行注释以两个斜杠开始，以行尾结束<br>语法：<code>//</code> 这是单行注释<br>使用方式：</p>
<ul>
<li>单独一行：<code>// comments</code> 双斜杠与文字之间保留一个空格</li>
<li>在代码后面添加注释：<code>var MAX_COUNT = 10; // comments</code> 双斜杠与代码结尾之间保留一个空格，与注释文字之间保留一个空格。</li>
<li>注释代码：<code>// var MAX_COUNT = 10;</code> 双斜杠与代码之间保留一个空格。</li>
</ul>
<p>示例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 单独一行</span></div><div class="line">setCount();</div><div class="line"></div><div class="line"><span class="keyword">var</span> MAX_COUNT = <span class="number">10</span>; <span class="comment">// 在代码后面添加注释</span></div><div class="line"></div><div class="line"><span class="comment">// 注释代码</span></div><div class="line"><span class="comment">// setName();</span></div></pre></td></tr></table></figure>
<h3 id="2-2-多行注释"><a href="#2-2-多行注释" class="headerlink" title="2.2 多行注释"></a>2.2 多行注释</h3><p>说明：以<code>/*</code>开头，以<code>*/</code>结尾<br>语法：<code>/* comments */</code><br>使用方法：</p>
<ul>
<li>若<code>/*</code>和<code>*/</code>在同一行，推荐采用单行注释</li>
<li>若至少三行注释，第一行为<code>/*</code>，最后一行为<code>*/</code>，其他行以<code>*</code>开始，与注释文字之间保留一个空格，并且所有的<code>*</code>保持竖向对齐</li>
</ul>
<p>示例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment"> * comments line one</span></div><div class="line"><span class="comment"> * comments line two</span></div><div class="line"><span class="comment"> */</span></div><div class="line">setName();</div></pre></td></tr></table></figure>
<h3 id="2-3-函数（方法）注释"><a href="#2-3-函数（方法）注释" class="headerlink" title="2.3 函数（方法）注释"></a>2.3 函数（方法）注释</h3><p>说明：函数（方法）注释也是多行注释的一种，但是包含了特殊的注释要求。<br>语法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 函数说明</span></div><div class="line"><span class="comment"> * @关键字</span></div><div class="line"><span class="comment"> */</span></div></pre></td></tr></table></figure></p>
<p>常用注释关键字：（只列出一部分）</p>
<table>
<thead>
<tr>
<th style="text-align:left">注释名</th>
<th style="text-align:left">语法</th>
<th style="text-align:left">含义</th>
<th style="text-align:left">示例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">@param</td>
<td style="text-align:left">@param 参数名 {参数类型} 描述信息</td>
<td style="text-align:left">描述参数的信息</td>
<td style="text-align:left">@param name {String} 名称</td>
</tr>
<tr>
<td style="text-align:left">@return</td>
<td style="text-align:left">@return {返回类型} 描述信息</td>
<td style="text-align:left">描述返回值的信息</td>
<td style="text-align:left">@return {String} 名称</td>
</tr>
<tr>
<td style="text-align:left">@author</td>
<td style="text-align:left">@author 作者名字 附属信息</td>
<td style="text-align:left">描述此函数或者模块的作者信息</td>
<td style="text-align:left">@author Tom 2016-10-10</td>
</tr>
<tr>
<td style="text-align:left">@version</td>
<td style="text-align:left">@version xx.xx.xx</td>
<td style="text-align:left">描述此函数或者模块的版本号</td>
<td style="text-align:left">@version 1.0.1</td>
</tr>
<tr>
<td style="text-align:left">@example</td>
<td style="text-align:left">@example 示例代码</td>
<td style="text-align:left">示例函数使用方法</td>
<td style="text-align:left">@example setName(‘John’)</td>
</tr>
</tbody>
</table>
<p>示例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 合并Grid的行</span></div><div class="line"><span class="comment"> * @param grid &#123;Ext.Grid.Panel&#125; 需要合并的Grid</span></div><div class="line"><span class="comment"> * @param cols &#123;Array&#125; 需要合并的Index（序号）数组；从0开始计数，序号也包含</span></div><div class="line"><span class="comment"> * @param isAllSome &#123;Boolean&#125; 是否2个tr的cols必须完全一样才能进行合并。true: 完全一样；false(默认): 不完全一样</span></div><div class="line"><span class="comment"> * @return void</span></div><div class="line"><span class="comment"> * @author polk6 2015/07/21</span></div><div class="line"><span class="comment"> * @example</span></div><div class="line"><span class="comment"> * ______________                                  ______________</span></div><div class="line"><span class="comment"> * | 年龄 | 姓名 |                                   | 年龄 | 姓名 |</span></div><div class="line"><span class="comment"> * --------------       mergeCells(grid, [0])      --------------</span></div><div class="line"><span class="comment"> * | 18  | 张三 |               =&gt;                  |     | 张三 |</span></div><div class="line"><span class="comment"> * --------------                                  |  18 |-------</span></div><div class="line"><span class="comment"> * | 18  | 王五 |                                   |     | 王五 |</span></div><div class="line"><span class="comment"> * --------------                                  --------------</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">mergeCells</span>(<span class="params">grid, cols, isAllSome</span>) </span>&#123;</div><div class="line">    <span class="comment">// do something</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="3-框架开发"><a href="#3-框架开发" class="headerlink" title="3. 框架开发"></a>3. 框架开发</h2><p>在团队开发或者引入第三方JS的时候，有时候会造成全局对象的命名冲突，比如a.js有个全局函数sendMsg()，b.js也有个全局函数sendMsg()，引入a.js和b.js文件时，会造成sendMsg()函数冲突。</p>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">全局变量冲突：b.js会覆盖a.js的同名函数                                // a.js</div><div class="line">                                                                 ------------------------</div><div class="line">                                                          +----&gt; | function sendMsg() &#123; |</div><div class="line">&lt;script src=&quot;/js/b.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;---+      |     alert(&apos;a&apos;);      |</div><div class="line">&lt;script src=&quot;/js/a.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;---+      | &#125;                    |</div><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;                           |      ------------------------</div><div class="line">                                                          |      // b.js</div><div class="line">    sendMsg(); // =&gt; ‘b’                                  |      -------------------------</div><div class="line">                                                          |      | function sendMsg() &#123;  |</div><div class="line">&lt;/script&gt;                                                 +----&gt; |     alert(&apos;b&apos;);       |</div><div class="line">                                                                 | &#125;                     |</div><div class="line">                                                                 -------------------------</div></pre></td></tr></table></figure>
<h3 id="3-2-单全局变量"><a href="#3-2-单全局变量" class="headerlink" title="3.2 单全局变量"></a>3.2 单全局变量</h3><p>所创建的全局对象名称是独一无二的，并将所有的功能代码添加到这个全局对象上。调用自己所写的代码时，以这个全局对象为入口。</p>
<p>如：</p>
<ul>
<li>jQuery的全局对象：$和jQuery</li>
<li>ExtJS的全局对象：Ext</li>
</ul>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">全局变量冲突：b.js和a.js都有各自的主对象。                             // a.js</div><div class="line">                                                                 -----------------------------</div><div class="line">                                                                 | var A = A || &#123;&#125;;          |</div><div class="line">                                                          +----&gt; | A.sendMsg = function () &#123; |</div><div class="line">&lt;script src=&quot;/js/b.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;---+      |     alert(&apos;a&apos;);           |</div><div class="line">&lt;script src=&quot;/js/a.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;---+      | &#125;                         |</div><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;                           |      -----------------------------</div><div class="line">                                                          |      // b.js</div><div class="line">    A.sendMsg(); // =&gt; ‘a’                                |      ------------------------------</div><div class="line">                                                          |      | var B = B || &#123;&#125;;           |</div><div class="line">                                                          |      | B.sendMsg = function () &#123;  |</div><div class="line">    B.sendMsg(); // =&gt; &apos;b&apos;                                +----&gt; |     alert(&apos;b&apos;);            |</div><div class="line">                                                                 | &#125;                          |</div><div class="line">                                                                 ------------------------------</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h3 id="3-3-命名空间"><a href="#3-3-命名空间" class="headerlink" title="3.3 命名空间"></a>3.3 命名空间</h3><p>在项目规模日益壮大时，可采用命名空间的方式对JS代码进行规范：即将代码按照功能进行分组，以组的形式附加到单全局对象上。</p>
<p>以Ext的chart模块为例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">                                                       ------------</div><div class="line">                                                 +---&gt; |   Axis   |</div><div class="line">                                                 |     ------------</div><div class="line">                                                 |     ------------</div><div class="line">                                                 +---&gt; | Category |</div><div class="line">                                    子模块名称     |     ------------</div><div class="line">                                    ----------   |     ------------</div><div class="line">                              +---&gt; |  axis  | --+---&gt; |    ...   |</div><div class="line">                  模块名称     |      ----------         ------------</div><div class="line">                  ---------   |     ----------         ------------</div><div class="line">            +---&gt; | chart | --+---&gt; | series | --+---&gt; |   Area   |</div><div class="line">单全局对象    |     ---------   |     ----------   |     ------------</div><div class="line">---------   |                 |     ----------   |     ------------</div><div class="line">|  Ext  | --+                 +---&gt; |  ...   |   +---&gt; |   Bar    |</div><div class="line">---------   |                       ----------   |     ------------</div><div class="line">            |     ---------                      |     ------------</div><div class="line">            +---&gt; |  ...  |                      +---&gt; |   ...    |</div><div class="line">                  ---------                            ------------</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-命名规范&quot;&gt;&lt;a href=&quot;#1-命名规范&quot; class=&quot;headerlink&quot; title=&quot;1. 命名规范&quot;&gt;&lt;/a&gt;1. 命名规范&lt;/h2&gt;&lt;h3 id=&quot;驼峰式命名法：&quot;&gt;&lt;a href=&quot;#驼峰式命名法：&quot; class=&quot;headerlink&quot; title=&quot;驼峰式命名法：&quot;&gt;&lt;/a&gt;驼峰式命名法：&lt;/h3&gt;&lt;p&gt;驼峰式命名法由大（小）写字母开始，后续每个单词首字母都大写。&lt;br&gt;按照第一个字母是否大写，分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pascal Case 大驼峰式命名法：首字母大写。如：StudentInfo&lt;/li&gt;
&lt;li&gt;Camel Case 小驼峰式命名法：首字母小写。如：studentInfo&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="规范" scheme="http://yoursite.com/categories/%E8%A7%84%E8%8C%83/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="开发规范" scheme="http://yoursite.com/tags/%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
</feed>
