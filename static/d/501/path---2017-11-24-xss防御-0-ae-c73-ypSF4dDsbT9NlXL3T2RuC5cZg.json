{"data":{"site":{"siteMetadata":{"title":"进击的前端","author":"ricosmall"}},"markdownRemark":{"id":"381436aa-af63-5a5f-b999-2337c8c89b65","excerpt":"XSS 攻击是一个很大的 Web 安全问题。XSS 攻击无处不在，但是到目前为止没有一套简单成熟的防御机制。 XSS 攻击 存储型 XSS 反射型 XSS DOM XSS XSS 防御 data type context code example defend method…","html":"<p>XSS 攻击是一个很大的 Web 安全问题。XSS 攻击无处不在，但是到目前为止没有一套简单成熟的防御机制。</p>\n<!-- more -->\n<h3>XSS 攻击</h3>\n<ol>\n<li>\n<p>存储型 XSS</p>\n</li>\n<li>\n<p>反射型 XSS</p>\n</li>\n<li>\n<p>DOM XSS</p>\n</li>\n</ol>\n<h3>XSS 防御</h3>\n<table>\n<thead>\n<tr>\n<th>data type</th>\n<th>context</th>\n<th>code example</th>\n<th>defend method</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String</td>\n<td>HTML Body</td>\n<td><code class=\"language-text\">&lt;span&gt;UNTRUSTED DATA&lt;/span&gt;</code></td>\n<td>HTML Entity 编码</td>\n</tr>\n<tr>\n<td>String</td>\n<td>安全 HTML 变量</td>\n<td><code class=\"language-text\">&lt;input type=&quot;text&quot; name=&quot;fname&quot; value=&quot;UNTRUSTED DATA&quot;&gt;</code></td>\n<td>1. HTML Attribute 编码 <br> 2. 只把不可信数据放在安全白名单内的变量上 <br> 3. 严格地校验不安全变量，如 background、id 和 name</td>\n</tr>\n<tr>\n<td>String</td>\n<td>GET 参数</td>\n<td><code class=\"language-text\">&lt;a href=&quot;/site/search?value=UNTRUSTED DATA&quot;&gt;clickme&lt;/a&gt;</code></td>\n<td>URL 编码</td>\n</tr>\n<tr>\n<td>String</td>\n<td>使用在 src 或 href 变量上的不可信 URLs</td>\n<td><code class=\"language-text\">&lt;a href=&quot;UNTRUSTED URL&quot;&gt;clickme&lt;/a&gt;</code> <br> <code class=\"language-text\">&lt;iframe src=&quot;UNTRUSTED URL&quot;&gt;</code></td>\n<td>1. 对输入进行规范化 <br> 2. URL 校验 <br> 3. URL 安全性认证 <br> 4. 只允许使用 http 和 https 协议（避免使用 javscript 协议去打开一个新窗口）  <br> 5. HTML Attribute 编码</td>\n</tr>\n<tr>\n<td>String</td>\n<td>CSS 值</td>\n<td><code class=\"language-text\">&lt;div style=&quot;width: UNTRUSTED DATA;&quot;&gt;Selection&lt;/div&gt;</code></td>\n<td>1. 使用 CSS 编码 <br> 2. 使用 CSS Hex 编码 <br> 3. 良好的 CSS 设计</td>\n</tr>\n<tr>\n<td>String</td>\n<td>javascript 变量</td>\n<td><code class=\"language-text\">&lt;script&gt;var currentValue=&#39;UNTRUSTED DATA&#39;;&lt;/script&gt;&lt;scrip&gt;someFunction(&#39;UNTRUSTED DATA&#39;);&lt;/script&gt;</code></td>\n<td>1. 确保所有变量值都被引号括起来 <br> 2. 使用 javascript Hex 编码 <br> 3. 使用 javascript Unicode 编码 <br> 4. 避免使用反斜杠转义（”, ’ 或者 \\）</td>\n</tr>\n<tr>\n<td>HTML</td>\n<td>HTML Body</td>\n<td><code class=\"language-text\">&lt;div&gt;UNTRUSTED HTML&lt;/div&gt;</code></td>\n<td>HTML 校验（JSoup, AntiSamy, HTML Sanitizer）</td>\n</tr>\n<tr>\n<td>String</td>\n<td>DOM XSS</td>\n<td><code class=\"language-text\">&lt;script&gt;document.write(&#39;UNTRUSTED INPUT: &#39;+window.location.hash);&lt;/script&gt;</code></td>\n<td>基于 DOM 操作的 XSS 漏洞防御措施</td>\n</tr>\n</tbody>\n</table>","frontmatter":{"title":"XSS防御","date":"November 24, 2017"}}},"pageContext":{"slug":"/2017-11-24-XSS防御/","previous":{"fields":{"slug":"/2017-10-27-nginx反向代理的Express如何拿到真实客户端IP/"},"frontmatter":{"title":"nginx反向代理的Express如何拿到真实客户端IP"}},"next":{"fields":{"slug":"/2017-12-05-python-二分查找/"},"frontmatter":{"title":"python-二分查找"}}}}